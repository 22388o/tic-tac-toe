{"version":3,"sources":["web3/wallet.ts","Square.js","Board.js","web3/wutils.ts","web3/web3.ts","web3/localwallet.ts","Server.js","Game.js","TitleBar.js","wallet.js","hooks.js","App.js","reportWebVitals.js","index.js"],"names":["NetWork","SignType","Square","props","tx","value","icon","className","n","winnerClass","onClick","href","target","title","label","Board","row","col","board","cellCounter","i","columns","j","push","this","renderSquare","winnerSquares","squares","createBoard","React","Component","wallet","network","signInput","privateKey","inputIndex","sigHashType","utxo","inputs","output","bsv","Transaction","Output","script","satoshis","sig","Signature","publicKey","prevTxId","txHash","outputIndex","signature","Sighash","sign","satoshisBN","sigtype","Script","buildPublicKeyHashIn","toDER","toHex","toBsvTx","tx_","forEach","input","addInput","Input","fromHex","outputs","addOutput","toRawTx","toString","getPreimage","ALL","bsvTx","getPreimage_","toASM","WEB3_VERSION","FEE","web3","url","axios","get","timeout","then","res","contractClass","buildContractClass","data","types","buildTypeClasses","contract","amountInContract","buildUnsignDeployTx","a","signRawTransaction","payAmount","getRawChangeAddress","changeAddress","listunspent","purpose","utxos","length","Error","sequence","changeAmount","buildPublicKeyHashOut","lockingScript","rawTx","sendRawTransaction","buildDeployTx","sendTx","console","log","LocalWallet","key","API_PREFIX","privKey","Testnet","PrivateKey","fromWIF","fromRandom","name","permissions","toAddress","balance","confirmed","unconfirmed","signTx","size","Math","max","time","post","txhex","txid","minAmount","options","filter","map","tx_hash","tx_pos","Promise","resolve","server","player","existGamebySelf","game","window","localStorage","getItem","JSON","parse","creator","existGamebyOther","deleteGame","removeItem","createGame","event","setItem","stringify","saveGame","getGame","gameJson","getIdentity","savePrivateKey","getPrivateKey","urlParams","URLSearchParams","location","search","self","addEventListener","e","emit","error","cb","on","off","EventEmitter","calculateWinner","lines","b","c","winner","winnerRow","initialState","history","Array","fill","currentStepNumber","xIsNext","Game","gameState","state","nextProps","setState","lastUtxo","slice","current","alert","newState","square","join","newLockingScript","amount","address","aliceAddress","PublicKey","alicePubKey","Networks","testnet","bobAddress","bobPubKey","aliceLockingScript","bobLockingScript","contractInstance","codePart","fromASM","preimage","getSignature","unlockScript","move","Sig","concat","currentLocation","0","1","2","3","4","5","6","7","8","stepNumber","Object","assign","catch","response","status","end","bet","src","deploy","winnerName","nexter","handleClick","TitleBar","prop","useReducer","bool","amountRef","useRef","onCancel","cancelBet","useEffect","started","ref","type","placeholder","parseInt","isNaN","startBet","Wallet","useState","setAddress","setBalance","getbalance","setWallet","updateWallet","callback","delay","savedCallback","id","setInterval","clearInterval","useInterval","toWIF","App","updateStart","updateContractInstance","forceUpdate","getPublicKey","Date","onBobJoin","appendPayInput","onAliceSign","onDeployed","fetchContract","warn","onNext","loadContract","TictactoeContractClass","newCall","PubKey","setDataPart","message","bobJoin","setTimeout","addJoinListener","addAliceSignListener","addDeployedListener","addNextListener","removeAliceSignListener","removeDeployedListener","removeJoinListener","removeNextListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abb75b96.chunk.js","sourcesContent":["\nimport { toHex, bsv } from 'scryptlib';\n\nexport interface UTXO {\n  txHash: number,\n  outputIndex: string;\n  satoshis: number;\n  script: string;\n}\n\nexport interface Output {\n  satoshis: number,\n  script: string;\n}\n\n\nexport interface Input {\n  utxo: UTXO,\n  sequence: number,\n  script: string;\n}\n\nexport interface Tx {\n  inputs: Input[],\n  outputs: Output[],\n}\n\nexport interface Account {\n  name: string,\n  paymail: string,\n  address: string,\n  permissions?: string[]\n}\n\n\nexport enum NetWork {\n  Testnet = 'testnet',\n  Mainnet = 'mainnet',\n  STN = 'STN'\n}\n\n\nexport enum SignType {\n  ALL = 0x00000001 | 0x00000040,\n  SINGLE = 0x00000003 | 0x00000040,\n  NONE = 0x00000002 | 0x00000040,\n  ANYONECANPAY_ALL = 0x00000001 | 0x00000040 | 0x00000080,\n  ANYONECANPAY_SINGLE = 0x00000003 | 0x00000040 | 0x00000080,\n  ANYONECANPAY_NONE = 0x00000002 | 0x00000040 | 0x00000080\n}\n\n\nexport abstract class wallet {\n\n  network: NetWork;\n\n  constructor(network: NetWork) {\n    this.network = network;\n  }\n\n\n  abstract requestAccount(name: string, permissions: string[]): Promise<Account>;\n\n  abstract getbalance(): Promise<number>;\n\n\n  abstract signRawTransaction(tx: Tx, inputIndex: number, sigHashType: SignType,\n    onlySig?: boolean,\n  ): Promise<string>;\n\n  abstract getSignature(tx: Tx, inputIndex: number, sigHashType: SignType\n  ): Promise<string>;\n\n  abstract sendRawTransaction(rawTx: string): Promise<string>;\n\n  //Returns array of unspent transaction outputs\n  abstract listunspent(minAmount: number, options?: {\n    purpose?: string\n  }): Promise<UTXO[]>;\n\n  abstract getRawChangeAddress(options?: {\n    purpose?: string\n  }): Promise<string>;\n\n  abstract getPublicKey(options?: {\n    purpose?: string\n  }): Promise<string>;\n\n}","import React from 'react';\n\nconst Square = props => {\n\n\n\n  let tx = props.value ? `https://test.whatsonchain.com/tx/${props.value.tx}` : \"\";\n  let icon = props.value ? <div className='squareicon'>{props.value.n}</div> : \"\";\n  return (\n    <div className=\"squarewapper\">\n      <button className={`${props.winnerClass} square`} onClick={props.onClick}>\n        {props.value ? <a href={tx} target=\"_blank\" title=\"Click to see the transaction\">{props.value.label}</a> : props.value}\n      </button>\n      {icon}\n    </div>\n\n  )\n\n}\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\n\nclass Board extends React.Component {\n  createBoard(row, col) {\n    const board = [];\n    let cellCounter = 0;\n\n    for (let i = 0; i < row; i += 1) {\n      const columns = [];\n      for (let j = 0; j < col; j += 1) {\n        columns.push(this.renderSquare(cellCounter++));\n      }\n      board.push(<div key={i} className=\"board-row\">{columns}</div>);\n    }\n\n    return board;\n  }\n\n  renderSquare(i) {\n\n    const winnerClass =\n      this.props.winnerSquares &&\n        (this.props.winnerSquares[0] === i ||\n          this.props.winnerSquares[1] === i ||\n          this.props.winnerSquares[2] === i)\n        ? 'square--green'\n        : '';\n\n    return (\n      <Square\n        winnerClass={winnerClass}\n        key={i}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return <div>{this.createBoard(3, 3)}</div>;\n  }\n}\n\nexport default Board;\n","\nimport { toHex, bsv, SigHashPreimage, getPreimage as getPreimage_ } from 'scryptlib';\nimport { SignType, Tx, UTXO } from './wallet';\n\n\nexport function signInput(privateKey: any, tx: any, inputIndex: number, sigHashType: number, utxo: UTXO): string {\n\n  tx.inputs[inputIndex].output = new bsv.Transaction.Output({\n    script: utxo.script,\n    satoshis: utxo.satoshis\n  });\n\n  const sig = new bsv.Transaction.Signature({\n    publicKey: privateKey.publicKey,\n    prevTxId: utxo.txHash,\n    outputIndex: utxo.outputIndex,\n    inputIndex,\n    signature: bsv.Transaction.Sighash.sign(tx, privateKey, sigHashType,\n      inputIndex,\n      tx.inputs[inputIndex].output.script,\n      tx.inputs[inputIndex].output.satoshisBN),\n    sigtype: sigHashType,\n  });\n\n  return bsv.Script.buildPublicKeyHashIn(\n    sig.publicKey,\n    sig.signature.toDER(),\n    sig.sigtype,\n  ).toHex();\n}\n\n\n\n\nexport function toBsvTx(tx: Tx) {\n  const tx_ = new bsv.Transaction();\n\n  tx.inputs.forEach(input => {\n    tx_.addInput(new bsv.Transaction.Input({\n      prevTxId: input.utxo.txHash,\n      outputIndex: input.utxo.outputIndex,\n      script: input.script ? bsv.Script.fromHex(input.script) : new bsv.Script(),\n    }), bsv.Script.fromHex(input.utxo.script), input.utxo.satoshis);\n  });\n\n\n  tx.outputs.forEach(output => {\n    tx_.addOutput(new bsv.Transaction.Output({\n      script: bsv.Script.fromHex(output.script),\n      satoshis: output.satoshis,\n    }));\n  });\n\n  return tx_;\n}\n\nexport function toRawTx(tx: Tx) {\n  return toBsvTx(tx).toString();\n}\n\n\n\nexport function getPreimage(tx: Tx, inputIndex = 0, sigHashType: SignType = SignType.ALL): SigHashPreimage {\n  const bsvTx = toBsvTx(tx);\n  return getPreimage_(bsvTx, bsv.Script.fromHex(tx.inputs[inputIndex].utxo.script).toASM(), tx.inputs[inputIndex].utxo.satoshis, inputIndex, sigHashType);\n}\n","import { promises } from 'dns';\nimport { buildContractClass, buildTypeClasses, ScryptType, SigHashPreimage, bsv, getPreimage, toHex } from 'scryptlib';\nimport { } from 'scryptlib';\nimport { Output, UTXO, wallet, Tx, Input, SignType } from './wallet';\nimport axios from 'axios';\nimport { AbstractContract } from 'scryptlib/dist/contract';\nimport { toRawTx } from './wutils';\nconst WEB3_VERSION = '0.0.1';\n\nconst FEE = 2000;\n\nexport class web3 {\n\n\n  static wallet: wallet;\n\n\n  static setWallet(wallet: wallet) {\n    web3.wallet = wallet;\n  }\n\n\n  static version() {\n    return WEB3_VERSION;\n  }\n\n\n  static loadContract(url: string): Promise<{\n    contractClass: typeof AbstractContract,\n    types: Record<string, typeof ScryptType>\n  }> {\n\n    return axios.get(url, {\n      timeout: 10000\n    }).then(res => {\n\n      return {\n        contractClass: buildContractClass(res.data),\n        types: buildTypeClasses(res.data)\n      };\n    });\n  }\n\n\n\n  static async buildDeployTx(contract: AbstractContract, amountInContract: number): Promise<Tx> {\n\n    return web3.buildUnsignDeployTx(contract, amountInContract).then(async (tx: Tx) => {\n      const sig = await web3.wallet.signRawTransaction(tx, 0, SignType.ALL);\n      tx.inputs[0].script = sig;\n      return tx;\n    });\n  }\n\n\n\n  static async appendPayInput(tx: Tx, payAmount: number): Promise<Tx> {\n    const changeAddress = await web3.wallet.getRawChangeAddress();\n\n    return web3.wallet.listunspent(payAmount + FEE, {\n      purpose: 'change'\n    }).then(async (utxos: UTXO[]) => {\n\n\n      if (utxos.length === 0) {\n        throw new Error('no utxos');\n      }\n\n      const inputIndex = tx.inputs.length;\n      tx.inputs.push(\n        {\n          utxo: utxos[0],\n          script: '',\n          sequence: 0\n        }\n      );\n\n      const changeAmount = utxos[0].satoshis - payAmount - FEE;\n      tx.outputs.push(\n        {\n          script: bsv.Script.buildPublicKeyHashOut(changeAddress).toHex(),\n          satoshis: changeAmount\n        }\n      );\n\n      const sig = await web3.wallet.signRawTransaction(tx, inputIndex, SignType.ALL);\n      tx.inputs[inputIndex].script = sig;\n      return tx;\n    });\n  }\n\n\n\n  static async buildUnsignDeployTx(contract: AbstractContract, amountInContract: number): Promise<Tx> {\n    const changeAddress = await web3.wallet.getRawChangeAddress();\n    return web3.wallet.listunspent(amountInContract + FEE, {\n      purpose: 'change'\n    }).then(async (utxos: UTXO[]) => {\n      if (utxos.length === 0) {\n        throw new Error('no utxos');\n      }\n\n      const tx: Tx = {\n        inputs: [],\n        outputs: []\n      };\n      const input: Input = {\n        utxo: utxos[0],\n        sequence: 0,\n        script: ''\n      };\n\n      tx.inputs.push(input);\n\n      tx.outputs.push({\n        script: contract.lockingScript.toHex(),\n        satoshis: amountInContract\n      });\n\n      const changeAmount = utxos[0].satoshis - amountInContract - FEE;\n      tx.outputs.push({\n        script: bsv.Script.buildPublicKeyHashOut(changeAddress).toHex(),\n        satoshis: changeAmount\n      });\n\n      return tx;\n    });\n  }\n\n\n  static async sendRawTx(rawTx: string): Promise<string> {\n    return web3.wallet.sendRawTransaction(rawTx);\n  }\n\n  static async sendTx(tx: Tx): Promise<string> {\n    return web3.wallet.sendRawTransaction(toRawTx(tx));\n  }\n\n\n  static async deploy(contract: AbstractContract, amountInContract: number): Promise<string> {\n    return web3.buildDeployTx(contract, amountInContract).then(async tx => {\n      return web3.sendTx(tx);\n    });\n  }\n}\n\n\n\n\nconsole.log(`hello, this is scryptlib web3 ${WEB3_VERSION}.`);","import { Account, NetWork, UTXO, wallet, Tx, SignType } from './wallet';\nimport { toHex, bsv, signTx } from 'scryptlib';\nimport { signInput, toBsvTx } from './wutils';\nimport axios from 'axios';\n\n\nexport class LocalWallet extends wallet {\n  API_PREFIX: string;\n  privKey: any;\n  constructor(network: NetWork, key?: string) {\n    super(network);\n    this.API_PREFIX = `https://api.whatsonchain.com/v1/bsv/${network == NetWork.Testnet ? 'test' : 'main'}`;\n    this.privKey = key ? new bsv.PrivateKey.fromWIF(key) : new bsv.PrivateKey.fromRandom(network);\n  }\n\n\n  requestAccount(name: string, permissions: string[]): Promise<Account> {\n    throw new Error('Method not implemented.');\n  }\n\n  async getbalance(): Promise<number> {\n\n    const {\n      data: balance\n    } = await axios.get(`${this.API_PREFIX}/address/${this.privKey.toAddress()}/balance`, {\n      timeout: 5000\n    });\n\n    return balance.confirmed + balance.unconfirmed;\n  }\n\n  async signRawTransaction(tx: Tx,\n    inputIndex: number,\n    sigHashType: SignType\n  ): Promise<string> {\n\n\n    const tx_ = toBsvTx(tx);\n\n    const utxo = tx.inputs[inputIndex].utxo;\n\n    return signInput(this.privKey, tx_, inputIndex, sigHashType, utxo);\n  }\n\n\n  async getSignature(tx: Tx,\n    inputIndex: number,\n    sigHashType: SignType\n  ): Promise<string> {\n\n\n    const tx_ = toBsvTx(tx);\n\n    return signTx(tx_, this.privKey, tx_.inputs[inputIndex].output.script.toASM(), tx_.inputs[inputIndex].output.satoshisBN, inputIndex, sigHashType);\n\n  }\n\n  async sendRawTransaction(rawTx: string): Promise<string> {\n\n    // 1 second per KB\n\n    const size = Math.max(1, rawTx.length / 2 / 1024); //KB\n    const time = Math.max(10000, 1000 * size);\n    const {\n      data: txid\n    } = await axios.post(`${this.API_PREFIX}/tx/raw`, {\n      txhex: rawTx\n    }, {\n      timeout: time\n    });\n    return txid;\n  }\n\n  async listunspent(minAmount: number, options?: { purpose?: string; }): Promise<UTXO[]> {\n    return axios.get(`${this.API_PREFIX}/address/${this.privKey.toAddress()}/unspent`, {\n      timeout: 10000\n    }).then(res => {\n      return res.data.filter((utxo: any) => utxo.value >= minAmount).map((utxo: any) => {\n        return {\n          txHash: utxo.tx_hash,\n          outputIndex: utxo.tx_pos,\n          satoshis: utxo.value,\n          script: bsv.Script.buildPublicKeyHashOut(this.privKey.toAddress()).toHex(),\n        } as UTXO;\n      });\n    });\n  }\n\n\n  getRawChangeAddress(options?: { purpose?: string; }): Promise<string> {\n\n    return new Promise(resolve => resolve(this.privKey.toAddress() + ''));\n  }\n\n\n  getPublicKey(options?: { purpose?: string; }): Promise<string> {\n\n    return new Promise(resolve => resolve(toHex(this.privKey.publicKey)));\n  }\n\n}","\nimport { EventEmitter } from 'events';\n\nclass Server extends EventEmitter {\n    player = ''\n    privKey = ''\n    constructor() {\n        super();\n        var urlParams = new URLSearchParams(window.location.search);\n        this.player = urlParams.get('player') || \"alice\";\n        const self = this;\n        window.addEventListener('storage', (e) => {\n            // When local storage changes, dump the list to\n            // the console.\n            console.log('on storage change ' + this.player, e)\n\n\n            if (e.key === \"game\") {\n                try {\n                    let gameJson = window.localStorage.getItem('game');\n                    if (gameJson && gameJson !== null) {\n                        let game = JSON.parse(gameJson);\n\n                        if (game.event) {\n\n                            self.emit(game.event, game)\n                        }\n\n                    }\n                } catch (e) {\n                    console.error(' storage change error', e)\n                }\n            }\n\n        }, false);\n\n    }\n\n    existGamebySelf = () => {\n\n        let game = window.localStorage.getItem('game');\n\n        if (game && game !== null) {\n            game = JSON.parse(game);\n            if (game.creator && game.creator === this.player) {\n                return game;\n            }\n        }\n\n        return undefined;\n    }\n\n    existGamebyOther = () => {\n\n        let game = window.localStorage.getItem('game');\n\n        if (game && game !== null) {\n            game = JSON.parse(game);\n            if (game.creator && game.creator !== this.player) {\n                return game;\n            }\n        }\n\n        return undefined;\n    }\n\n\n    deleteGame = () => {\n        console.log('deleteGame');\n        window.localStorage.removeItem('game');\n    }\n\n\n    createGame = (game) => {\n        game.event = 'createGame';\n        console.log('createGame', game);\n        return window.localStorage.setItem('game', JSON.stringify(game));\n    }\n\n    saveGame = (game, event) => {\n        game.event = event;\n        console.log('saveGame', game);\n        window.localStorage.setItem('game', JSON.stringify(game));\n    }\n\n\n\n    getGame = () => {\n        let gameJson = window.localStorage.getItem('game');\n        if (gameJson && gameJson !== null) {\n            return JSON.parse(gameJson);\n        }\n        return undefined\n    }\n\n\n\n    getIdentity = () => (this.player);\n\n\n    savePrivateKey = (key) => {\n        this.privKey = key;\n        window.localStorage.setItem(this.player, key);\n    }\n\n\n    getPrivateKey = () => {\n        if (this.player) {\n            this.privKey = window.localStorage.getItem(this.player);\n        }\n\n        return this.privKey;\n    }\n\n\n    addJoinListener(cb) {\n        console.log('addJoinListener');\n        this.on('JoinGame', cb);\n    }\n\n\n    removeJoinListener(cb) {\n        console.log('removeJoinListener');\n        this.off('JoinGame', cb)\n    }\n\n\n    addAliceSignListener(cb) {\n        console.log('addAliceSignListener');\n        this.on('AliceSign', cb);\n    }\n\n    removeAliceSignListener(cb) {\n        console.log('removeAliceSignListener');\n        this.off('AliceSign', cb)\n    }\n\n\n    addDeployedListener(cb) {\n        console.log('addDeployedListener');\n        this.on('deployed', cb);\n    }\n\n\n    removeDeployedListener(cb) {\n        console.log('removeDeployedListener');\n        this.off('deployed', cb)\n    }\n\n\n    addNextListener(cb) {\n        console.log('addNextListener');\n        this.on('next', cb);\n    }\n\n    removeNextListener(cb) {\n        console.log('removeNextListener');\n        this.off('next', cb)\n    }\n}\n\nconst server = new Server();\n\nexport default server;","import React from 'react';\nimport Board from './Board';\nimport { bsv, Bytes, Sig, toHex } from 'scryptlib';\nimport { web3, Input, SignType } from './web3';\n\nimport server from './Server';\nimport { getPreimage } from './web3/wutils';\n\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[b] && squares[c] && squares[a].label === squares[b].label && squares[a].label === squares[c].label) {\n      return { winner: squares[a], winnerRow: lines[i] };\n    }\n  }\n\n  return { winner: null, winnerRow: null };\n};\n\nconst getLocation = (move) => {\n  const locationMap = {\n    0: 'row: 1, col: 1',\n    1: 'row: 1, col: 2',\n    2: 'row: 1, col: 3',\n    3: 'row: 2, col: 1',\n    4: 'row: 2, col: 2',\n    5: 'row: 2, col: 3',\n    6: 'row: 3, col: 1',\n    7: 'row: 3, col: 2',\n    8: 'row: 3, col: 3',\n  };\n\n  return locationMap[move];\n};\n\nconst initialState = {\n  history: [\n    {\n      squares: Array(9).fill(null),\n    },\n  ],\n  currentStepNumber: 0,\n  xIsNext: true,\n};\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (props.game && props.game.gameState) {\n      this.state = props.game.gameState;\n    } else {\n      this.state = initialState;\n    }\n  }\n\n\n\n  componentWillReceiveProps(nextProps) {\n    console.log('componentWillReceiveProps', nextProps)\n    if (nextProps.game && nextProps.game.gameState) {\n      this.setState(nextProps.game.gameState);\n    } else {\n      this.setState(initialState);\n    }\n  }\n\n\n  async componentDidMount() {\n    console.log('componentDidMount', this.props)\n\n\n  }\n\n  componentWillUnmount() {\n\n  }\n\n\n  async handleClick(i) {\n\n    if (!this.props.game || !this.props.game.lastUtxo) {\n      console.error(\"handleClick error\", this.props.game)\n      return;\n    }\n    const history = this.state.history.slice(0, this.state.currentStepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares).winner || squares[i]) {\n      return;\n    }\n    squares[i] = { label: this.state.xIsNext ? 'X' : 'O' };\n    let player = server.getIdentity();\n\n    if (player === \"alice\" && this.state.xIsNext) {\n\n    } else if (player === \"bob\" && !this.state.xIsNext) {\n\n    } else {\n      alert(`now is ${this.state.xIsNext ? 'Alice' : 'Bob'} turn `)\n      console.error(`now is ${this.state.xIsNext ? 'Alice' : 'Bob'} turn , but got ${player}`)\n      return;\n    }\n\n\n\n    let newState = (!this.state.xIsNext ? '00' : '01') + squares.map(square => {\n\n      if (square && square.label === 'X') {\n        return '01'\n      } else if (square && square.label === 'O') {\n        return '02'\n      } else {\n        return '00';\n      }\n    }).join('');\n\n    let newLockingScript = \"\";\n    let winner = calculateWinner(squares).winner;\n    const FEE = 3000;\n    let outputs = [];\n    let amount = this.props.game.lastUtxo.satoshis - FEE;\n    if (winner) {\n      // winner is current player\n\n      let address = await web3.wallet.getRawChangeAddress();\n\n      newLockingScript = bsv.Script.buildPublicKeyHashOut(address).toHex();\n\n      outputs.push({\n        satoshis: amount,\n        script: newLockingScript\n      })\n\n    } else if (history.length >= 9) {\n\n      const aliceAddress = new bsv.PublicKey(this.props.game.alicePubKey, {\n        network: bsv.Networks.testnet\n      });\n      const bobAddress = new bsv.PublicKey(this.props.game.bobPubKey, {\n        network: bsv.Networks.testnet\n      });\n\n      //no body win\n      const aliceLockingScript = bsv.Script.buildPublicKeyHashOut(aliceAddress.toAddress(bsv.Networks.testnet)).toHex();\n      const bobLockingScript = bsv.Script.buildPublicKeyHashOut(bobAddress.toAddress(bsv.Networks.testnet)).toHex();\n      amount = (this.props.game.lastUtxo.satoshis - FEE) / 2;\n\n      outputs.push({\n        satoshis: amount,\n        script: aliceLockingScript\n      })\n\n      outputs.push({\n        satoshis: amount,\n        script: bobLockingScript\n      })\n\n    } else {\n      //next\n      newLockingScript = [this.props.contractInstance.codePart.toHex(), bsv.Script.fromASM(newState).toHex()].join('');\n      outputs.push({\n        satoshis: amount,\n        script: newLockingScript\n      })\n    }\n\n\n\n\n    let tx = {\n      inputs: [{\n        utxo: this.props.game.lastUtxo,\n        sequence: 0,\n        script: \"\"\n      }],\n      outputs: outputs\n    }\n\n\n    let preimage = getPreimage(tx);\n\n    web3.wallet.getSignature(tx, 0, SignType.ALL, true).then(sig => {\n\n      let unlockScript = this.props.contractInstance.move(i, new Sig(toHex(sig)), amount, preimage).toHex();\n\n      tx.inputs[0].script = unlockScript;\n\n      web3.sendTx(tx).then(txid => {\n\n        squares[i].tx = txid;\n        squares[i].n = history.length;\n        let gameState = {\n          history: history.concat([\n            {\n              squares,\n              currentLocation: getLocation(i),\n              stepNumber: history.length,\n            },\n          ]),\n          xIsNext: !this.state.xIsNext,\n          currentStepNumber: history.length,\n        };\n\n        server.saveGame(Object.assign({}, this.props.game, {\n          gameState: gameState,\n          lastUtxo: {\n            txHash: txid,\n            outputIndex: 0,\n            satoshis: tx.outputs[0].satoshis,\n            script: tx.outputs[0].script\n          }\n        }), 'next')\n\n        this.setState(gameState);\n\n      }).catch(e => {\n        if (e.response) {\n          alert('sendTx errror: ' + e.response.data)\n        }\n        console.error('sendTx errror', e.response)\n      })\n    })\n\n  }\n\n\n  render() {\n    const { history } = this.state;\n    const current = history[this.state.currentStepNumber];\n    const { winner, winnerRow } = calculateWinner(current.squares);\n\n\n\n    const game = server.getGame();\n\n\n\n\n    let status;\n    let end;\n\n    let icon;\n\n\n    if (server.getIdentity() === 'bob') {\n      icon = <div className=\"bob\">Bob<img src=\"/tic-tac-toe/bob.png\"></img></div>\n    } else {\n      icon = <div className=\"alice\">Alice<img src=\"/tic-tac-toe/alice.jpg\"></img></div>\n    }\n\n    let bet;\n    if (game && game.deploy) {\n      bet = <div className=\"bet\"><a href={`https://test.whatsonchain.com/tx/${game.deploy}`} target=\"_blank\">Bet transaction</a> </div>\n    }\n\n    let player = server.getIdentity();\n    if (winner) {\n      let winnerName = winner.label === 'X' ? 'Alice' : 'Bob';\n      status = `Winner is ${winnerName}`;\n      if (game && game.lastUtxo) {\n        end = <div className=\"end\"><a href={`https://test.whatsonchain.com/tx/${game.lastUtxo.txHash}`} target=\"_blank\">Withdraw transaction</a> </div>\n      }\n    } else if (history.length === 10) {\n      status = 'Draw. No one won.';\n      if (game && game.lastUtxo) {\n        end = <div className=\"end\"><a href={`https://test.whatsonchain.com/tx/${game.lastUtxo.txHash}`} target=\"_blank\">Withdraw transaction</a> </div>\n      }\n    } else {\n\n      let nexter = this.state.xIsNext ? 'Alice' : 'Bob';\n\n      status = `Next player: ${nexter}`;\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n\n          <div className=\"game-title\">\n            {icon}\n            <div className=\"game-status\"> {status} </div>\n          </div>\n\n          <Board\n            squares={current.squares}\n            winnerSquares={winnerRow}\n            onClick={i => this.handleClick(i)}\n          />\n\n          <div className=\"game-bottom\">\n            {bet}\n            {end}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","\nimport React, { useState, useRef, useEffect } from 'react';\n\nimport { web3 } from './web3';\nimport server from './Server';\n\nfunction makeid(length) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\n\nfunction TitleBar(prop) {\n    const forceUpdate = React.useReducer(bool => !bool)[1];\n\n    const amountRef = useRef(null);\n\n    const onStart = (e) => {\n\n        if (!web3.wallet) {\n            alert(\"Pelease create wallet first\")\n            return;\n        }\n        let amount = parseInt(amountRef.current.value);\n\n        if (amount < 10000) {\n            alert(\"The bet fund is too small to play, at least 10000\")\n            return;\n        }\n\n        if (!isNaN(amount)) {\n            prop.startBet(amount);\n        } else {\n            console.error(`${amountRef.current.value} is not number`)\n        }\n    }\n\n    const onCancel = (e) => {\n        prop.cancelBet();\n    }\n\n\n\n\n\n\n    useEffect(() => {\n\n    })\n\n    if (prop.started) {\n\n        return (\n            <div>\n                The game is in progress ...\n                <button className=\"pure-button cancel\" onClick={onCancel}>Restart</button>\n            </div>\n        );\n    }\n    else if (server.existGamebySelf()) {\n        return (\n            <div>\n                Waiting someone join the game ...\n                <a className=\"pure-button\" href={window.location.href + '?player=bob'} target=\"_blank\"> Join</a>\n                <button className=\"pure-button cancel\" onClick={onCancel}>Restart</button>\n            </div>\n        );\n\n    } else if (server.existGamebyOther()) {\n\n        return (\n            <div>\n                Joining the game...\n            </div>\n        );\n    }\n    else {\n        return (\n            <div>\n                <label>Bet amount:\n                    <input ref={amountRef} type=\"number\" name=\"amount\" placeholder=\"in satoshis\" />\n                </label>\n                <button className=\"start\" onClick={onStart}>Start Bet</button>\n            </div>\n        );\n    }\n}\n\nexport default TitleBar;\n","\nimport * as QRCode from 'qrcode.react';\nimport { bsv } from 'scryptlib';\nimport React, { useState, useEffect } from 'react';\nimport { web3, LocalWallet, NetWork } from './web3';\nimport { useInterval, forceUpdate } from './hooks';\nimport server from './Server';\n\nconst Wallet = props => {\n\n    const [address, setAddress] = useState('')\n    const [balance, setBalance] = useState(0)\n\n    useEffect(() => {\n\n        if (web3.wallet) {\n            web3.wallet.getRawChangeAddress().then(address => {\n                setAddress(address)\n            })\n\n            web3.wallet.getbalance().then(balance => {\n                setBalance(balance)\n            })\n        } else if (server.getPrivateKey()) {\n            web3.setWallet(new LocalWallet(NetWork.Testnet, server.getPrivateKey()));\n            props.updateWallet()\n        }\n    });\n\n\n    useInterval(() => {\n\n        if (web3.wallet) {\n            web3.wallet.getbalance().then(b => {\n                console.log(`update balance old: ${balance} new: ${b}`)\n\n                if (balance === 0 && b > 0) {\n                    alert('Successfully deposit, try F5 to reload the page')\n                }\n\n                setBalance(b)\n            })\n        }\n\n    }, 5000);\n\n\n    const onClick = (e) => {\n\n        try {\n            const privateKey = new bsv.PrivateKey.fromRandom('testnet')\n\n            web3.setWallet(new LocalWallet(NetWork.Testnet, privateKey.toWIF()));\n\n            server.savePrivateKey(privateKey.toWIF());\n            props.updateWallet();\n        } catch (e) {\n            console.log('wallet onChange error', e)\n        }\n    };\n\n\n\n\n\n    if (web3.wallet) {\n        return <div className=\"wallet\">\n\n            <div className=\"walletInfo\">\n                <div className=\"address\" >\n                    <label>Address: {address}</label>\n                </div>\n\n                <div className=\"balance\">\n                    <label >Balance: {balance}</label>\n                </div>\n\n                <div className=\"fundtips\">\n                    <label >You can fund the address with <a href=\"https://faucet.bitcoincloud.net\" target=\"_blank\"><span> faucets</span></a></label>\n                </div>\n            </div>\n            <div className=\"walletqrcode\">\n                <QRCode value={address} ></QRCode>\n            </div>\n\n        </div>\n    } else {\n        return <div className=\"wallet\">\n            <button className=\"pure-button button-large\" onClick={onClick}>Create Wallet</button>\n        </div>\n    }\n\n}\n\nexport default Wallet;\n\n\n","\nimport React, { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    });\n\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n    }, [delay]);\n}\n","import './App.css';\nimport Game from './Game';\nimport React, { useState, useEffect } from 'react';\nimport TitleBar from './TitleBar';\nimport { Bytes, PubKey, toHex, newCall } from 'scryptlib';\n\nimport { web3, SignType } from './web3';\nimport Wallet from './wallet';\n\nimport server from './Server';\n\n\n\nfunction App() {\n\n  const [started, updateStart] = useState(false);\n\n  const [contractInstance, updateContractInstance] = useState(null);\n\n  const forceUpdate = React.useReducer(bool => !bool)[1];\n\n  const startBet = async (amount) => {\n\n    //let tx = await web3.deploy(contractInstance, 10000);\n    console.log('startBet with amount', amount)\n\n    if (server.getIdentity() === 'bob') {\n      alert('Only Alice can start bet')\n      return\n    }\n\n    if (web3.wallet) {\n\n      //let tx = await web3.buildUnsignDeployTx(contractInstance, 10000);\n\n      let balance = await web3.wallet.getbalance();\n\n      if (amount > balance) {\n        alert('Please fund your wallet address first')\n        return\n      }\n\n      let alicePubKey = await web3.wallet.getPublicKey();\n\n\n      server.createGame({\n        \"amount\": amount,\n        \"tx\": {\n          inputs: [],\n          outputs: []\n        },\n        \"name\": \"tic-tac-toe\",\n        \"alicePubKey\": alicePubKey,\n        \"bobPubKey\": \"\",\n        \"creator\": \"alice\",\n        \"player\": \"\",\n        \"date\": new Date()\n      })\n\n      forceUpdate();\n    }\n  }\n\n  const cancelBet = () => {\n\n    server.deleteGame();\n    updateStart(false)\n    forceUpdate();\n  }\n\n  const onBobJoin = async (game) => {\n\n\n    console.log('onBobJoin', game)\n\n\n    if (game.creator === \"alice\" && server.getIdentity() === \"alice\") {\n\n      let tx = await web3.appendPayInput(game.tx, game.amount);\n      game.tx = tx;\n\n\n      server.saveGame(game, 'AliceSign');\n\n    } else {\n      updateStart(true);\n    }\n  }\n\n\n  const onAliceSign = async (game) => {\n    //Alice SIGN\n\n    if (game.creator === \"alice\" && server.getIdentity() === \"bob\") {\n\n      console.log('onAliceSign', game)\n      let sig = await web3.wallet.signRawTransaction(game.tx, 0, SignType.ALL);\n      game.tx.inputs[0].script = sig;\n      web3.sendTx(game.tx).then((txid => {\n        game.lastUtxo = {\n          txHash: txid,\n          outputIndex: 0,\n          satoshis: game.tx.outputs[0].satoshis,\n          script: game.tx.outputs[0].script\n        };\n\n        game.deploy = txid;\n\n        server.saveGame(game, \"deployed\")\n        updateStart(true)\n      }))\n    }\n\n  }\n\n\n  const onDeployed = async (game) => {\n    //BOB SIGN\n    if (game.creator === \"alice\" && server.getIdentity() === \"alice\") {\n      console.log('onDeployed', game)\n\n      fetchContract(game)\n      updateStart(true)\n    } else {\n      console.warn('onDeployed but not receive by Alice', game)\n    }\n  }\n\n\n  const onNext = async (game) => {\n    //BOB SIGN\n    console.log(\"onNext\", game)\n    forceUpdate();\n  }\n\n\n  async function fetchContract(game) {\n\n\n    if (contractInstance === null && game && game.bobPubKey && game.alicePubKey) {\n      let {\n        contractClass: TictactoeContractClass\n      } = await web3.loadContract(\"/tic-tac-toe/tictactoe_desc.json\");\n\n      let c = newCall(TictactoeContractClass, [new PubKey(toHex(game.alicePubKey)), new PubKey(toHex(game.bobPubKey))])\n      c.setDataPart(game.state ? game.state : '00000000000000000000');\n      console.log('fetchContract', c)\n      updateContractInstance(c);\n      return c;\n    }\n    console.log('fetchContract null')\n    return contractInstance\n  }\n\n\n  useEffect(() => {\n    let game = server.getGame();\n\n    if (game && game.lastUtxo) {\n      updateStart(true)\n    }\n\n\n\n    async function bobJoin(game) {\n\n      let bobPubKey = await web3.wallet.getPublicKey();\n\n      let balance = await web3.wallet.getbalance();\n\n\n      if (balance <= game.amount) {\n        alert('no available utxos or  balance is not enough, please fund your wallet')\n        return;\n      }\n\n      game = Object.assign(game, {\n        \"bobPubKey\": bobPubKey,\n        \"player\": \"Bob\"\n      })\n\n\n      let c = await fetchContract(game);\n\n      console.log('bobJoin fetchContract', c)\n      if (c != null) {\n        web3.buildUnsignDeployTx(c, game.amount).then(tx => {\n          tx.outputs[0].satoshis = game.amount * 2;\n          server.saveGame(Object.assign(game, {\n            \"tx\": tx\n          }), \"JoinGame\")\n        }).catch(e => {\n          if (e.message === 'no utxos') {\n            alert('no available utxos, please fund your wallet')\n          }\n          console.error('buildUnsignDeployTx error', e)\n        })\n      }\n    }\n\n\n    if (server.getIdentity() === 'bob' && game && !game.deploy) {\n\n      if (web3.wallet) {\n        bobJoin(game)\n      } else {\n        setTimeout(() => {\n          alert('Please create your wallet and fund it');\n        }, 1000)\n\n      }\n\n\n    } else {\n      fetchContract(game);\n    }\n\n\n\n    server.addJoinListener(onBobJoin);\n    server.addAliceSignListener(onAliceSign);\n    server.addDeployedListener(onDeployed);\n    server.addNextListener(onNext)\n    return () => {\n\n      server.removeAliceSignListener(onAliceSign)\n      server.removeDeployedListener(onDeployed)\n      server.removeJoinListener(onBobJoin)\n      server.removeNextListener(onNext)\n    }\n\n  }, [contractInstance]);\n\n\n  const game = server.getGame();\n\n  return (\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n        <h2>\n          Play Tic-Tac-Toe on Bitcoin\n        </h2>\n        <TitleBar startBet={startBet} cancelBet={cancelBet} started={started} game={game} />\n\n        <Game game={game} contractInstance={contractInstance} />\n\n        <Wallet updateWallet={() => {\n          forceUpdate()\n        }}></Wallet>\n      </header>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}