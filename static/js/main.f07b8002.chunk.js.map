{"version":3,"sources":["web3/wallet.ts","Square.js","Board.js","web3/wutils.ts","web3/localwallet.ts","web3/web3.ts","Server.js","Game.js","TitleBar.js","wallet.js","hooks.js","App.js","reportWebVitals.js","index.js"],"names":["NetWork","SignType","Square","props","tx","value","icon","className","n","winnerClass","onClick","href","target","title","label","Board","row","col","board","cellCounter","i","columns","j","push","this","renderSquare","winnerSquares","squares","createBoard","React","Component","wallet","network","signInput","privateKey","inputIndex","sigHashType","utxo","inputs","output","bsv","Transaction","Output","script","satoshis","sig","Signature","publicKey","prevTxId","txHash","outputIndex","signature","Sighash","sign","satoshisBN","sigtype","Script","buildPublicKeyHashIn","toDER","toHex","toBsvTx","tx_","forEach","input","addInput","Input","sequenceNumber","sequence","fromHex","outputs","addOutput","nLockTime","toRawTx","toString","getPreimage","ALL","bsvTx","getPreimage_","toASM","LocalWallet","key","API_PREFIX","privKey","Testnet","PrivateKey","fromWIF","fromRandom","name","permissions","Error","a","axios","get","toAddress","timeout","balance","data","confirmed","unconfirmed","signTx","rawTx","size","Math","max","length","time","post","txhex","txid","minAmount","options","then","res","filter","map","tx_hash","tx_pos","buildPublicKeyHashOut","Promise","resolve","FEE","web3","url","contractClass","buildContractClass","types","buildTypeClasses","contract","amountInContract","alicePrivateKey","bobPrivateKey","aliceWallet","Mainnet","bobWallet","getRawChangeAddress","aliceChangeAddress","bobChangeAddress","lockingScript","listUnspent","purpose","utxos","changeAmount","signRawTransaction","unlockscript","sendRawTransaction","buildDeployTx","sendTx","server","player","deleteGame","console","log","window","localStorage","removeItem","createGame","game","event","setItem","JSON","stringify","saveGame","getGame","gameJson","getItem","parse","getCurrentPlayer","savePrivateKey","getPrivateKey","getBobPrivateKey","getAlicePrivateKey","urlParams","URLSearchParams","location","search","self","addEventListener","e","emit","error","cb","on","off","EventEmitter","calculateWinner","lines","b","c","winner","winnerRow","initialState","history","Array","fill","currentStepNumber","xIsNext","Game","gameState","state","nextProps","setState","square","join","lastUtxo","alert","newState","newLockingScript","amount","address","aliceAddress","PublicKey","alicePubKey","Networks","testnet","bobAddress","bobPubKey","aliceLockingScript","bobLockingScript","contractInstance","codePart","fromASM","undefined","preimage","getSignature","unlockScript","move","Sig","slice","current","checkIfValid","calculateNewState","buildCallContractTx","concat","currentLocation","0","1","2","3","4","5","6","7","8","stepNumber","Object","assign","catch","response","status","end","bet","src","deploy","winnerName","nexter","handleClick","TitleBar","useReducer","bool","amountRef","useRef","onCancel","cancelBet","started","creator","split","ref","type","placeholder","parseInt","isNaN","startBet","Wallet","useState","setAddress","setBalance","useEffect","getbalance","setWallet","callback","delay","savedCallback","id","setInterval","clearInterval","useInterval","onWithdraw","withdrawAddress","document","getElementById","Address","fromString","changeAddress","total","index","toWIF","App","updateStart","updateContractInstance","forceUpdate","getPublicKey","Date","onDeployed","fetchContract","onNext","loadContract","TictactoeContractClass","newCall","PubKey","setDataPart","pubKey","message","joinGame","setTimeout","addDeployedListener","addNextListener","removeDeployedListener","removeNextListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f07b8002.chunk.js","sourcesContent":["\nimport { toHex, bsv } from 'scryptlib';\n\nexport interface UTXO {\n  txHash: number,\n  outputIndex: string;\n  satoshis: number;\n  script: string;\n}\n\nexport interface Output {\n  satoshis: number,\n  script: string;\n}\n\n\nexport interface Input {\n  utxo: UTXO,\n  sequence: number,\n  script: string;\n}\n\nexport interface Tx {\n  nLockTime?: number,\n  inputs: Input[],\n  outputs: Output[],\n}\n\nexport interface Account {\n  name: string,\n  paymail: string,\n  address: string,\n  permissions?: string[]\n}\n\n\nexport enum NetWork {\n  Testnet = 'testnet',\n  Mainnet = 'mainnet',\n  STN = 'STN'\n}\n\n\nexport enum SignType {\n  ALL = 0x00000001 | 0x00000040,\n  SINGLE = 0x00000003 | 0x00000040,\n  NONE = 0x00000002 | 0x00000040,\n  ANYONECANPAY_ALL = 0x00000001 | 0x00000040 | 0x00000080,\n  ANYONECANPAY_SINGLE = 0x00000003 | 0x00000040 | 0x00000080,\n  ANYONECANPAY_NONE = 0x00000002 | 0x00000040 | 0x00000080\n}\n\n\nexport abstract class wallet {\n\n  network: NetWork;\n\n  constructor(network: NetWork) {\n    this.network = network;\n  }\n\n  //Dapp use this api to connect to the wallet.\n  abstract requestAccount(name: string, permissions: string[]): Promise<Account>;\n\n  //get wallet balance\n  abstract getbalance(): Promise<number>;\n\n  //sign raw transaction, returns unlockscript of the p2pkh input if success\n  abstract signRawTransaction(tx: Tx, inputIndex: number, sigHashType: SignType\n  ): Promise<string>;\n\n  //get signature for special input\n  abstract getSignature(tx: Tx, inputIndex: number, sigHashType: SignType\n  ): Promise<string>;\n\n  //send raw transaction, returns transaction hash if success\n  abstract sendRawTransaction(rawTx: string): Promise<string>;\n\n  //returns array of unspent transaction outputs, which total amount is more than the minAmount argument.\n  abstract listUnspent(minAmount: number, options?: {\n    purpose?: string\n  }): Promise<UTXO[]>;\n\n  //returns a new Bitcoin address, for receiving change.\n  abstract getRawChangeAddress(options?: {\n    purpose?: string\n  }): Promise<string>;\n\n  //returns a public key\n  abstract getPublicKey(options?: {\n    purpose?: string\n  }): Promise<string>;\n\n}","import React from 'react';\n\nconst Square = props => {\n\n\n\n  let tx = props.value ? `https://whatsonchain.com/tx/${props.value.tx}` : \"\";\n  let icon = props.value ? <div className='squareicon'>{props.value.n}</div> : \"\";\n  return (\n    <div className=\"squarewapper\">\n      <button className={`${props.winnerClass} square`} onClick={props.onClick}>\n        {props.value ? <a href={tx} target=\"_blank\" title=\"Click to see the transaction\">{props.value.label}</a> : props.value}\n      </button>\n      {icon}\n    </div>\n\n  )\n\n}\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\n\nclass Board extends React.Component {\n  createBoard(row, col) {\n    const board = [];\n    let cellCounter = 0;\n\n    for (let i = 0; i < row; i += 1) {\n      const columns = [];\n      for (let j = 0; j < col; j += 1) {\n        columns.push(this.renderSquare(cellCounter++));\n      }\n      board.push(<div key={i} className=\"board-row\">{columns}</div>);\n    }\n\n    return board;\n  }\n\n  renderSquare(i) {\n\n    const winnerClass =\n      this.props.winnerSquares &&\n        (this.props.winnerSquares[0] === i ||\n          this.props.winnerSquares[1] === i ||\n          this.props.winnerSquares[2] === i)\n        ? 'square--green'\n        : '';\n\n    return (\n      <Square\n        winnerClass={winnerClass}\n        key={i}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return <div>{this.createBoard(3, 3)}</div>;\n  }\n}\n\nexport default Board;\n","\nimport { toHex, bsv, SigHashPreimage, getPreimage as getPreimage_ } from 'scryptlib';\nimport { SignType, Tx, UTXO } from './wallet';\n\n\nexport function signInput(privateKey: any, tx: any, inputIndex: number, sigHashType: number, utxo: UTXO): string {\n\n  tx.inputs[inputIndex].output = new bsv.Transaction.Output({\n    script: utxo.script,\n    satoshis: utxo.satoshis\n  });\n\n  const sig = new bsv.Transaction.Signature({\n    publicKey: privateKey.publicKey,\n    prevTxId: utxo.txHash,\n    outputIndex: utxo.outputIndex,\n    inputIndex,\n    signature: bsv.Transaction.Sighash.sign(tx, privateKey, sigHashType,\n      inputIndex,\n      tx.inputs[inputIndex].output.script,\n      tx.inputs[inputIndex].output.satoshisBN),\n    sigtype: sigHashType,\n  });\n\n  return bsv.Script.buildPublicKeyHashIn(\n    sig.publicKey,\n    sig.signature.toDER(),\n    sig.sigtype,\n  ).toHex();\n}\n\n\n\n\nexport function toBsvTx(tx: Tx) {\n  const tx_ = new bsv.Transaction();\n\n  tx.inputs.forEach(input => {\n    tx_.addInput(new bsv.Transaction.Input({\n      prevTxId: input.utxo.txHash,\n      outputIndex: input.utxo.outputIndex,\n      sequenceNumber: input.sequence,\n      script: input.script ? bsv.Script.fromHex(input.script) : new bsv.Script(),\n    }), bsv.Script.fromHex(input.utxo.script), input.utxo.satoshis);\n  });\n\n\n  tx.outputs.forEach(output => {\n    tx_.addOutput(new bsv.Transaction.Output({\n      script: bsv.Script.fromHex(output.script),\n      satoshis: output.satoshis,\n    }));\n  });\n\n  tx_.nLockTime = tx.nLockTime || 0;\n  return tx_;\n}\n\nexport function toRawTx(tx: Tx) {\n  return toBsvTx(tx).toString();\n}\n\n\n\nexport function getPreimage(tx: Tx, inputIndex = 0, sigHashType: SignType = SignType.ALL): SigHashPreimage {\n  const bsvTx = toBsvTx(tx);\n  return getPreimage_(bsvTx, bsv.Script.fromHex(tx.inputs[inputIndex].utxo.script).toASM(), tx.inputs[inputIndex].utxo.satoshis, inputIndex, sigHashType);\n}\n","import { Account, NetWork, UTXO, wallet, Tx, SignType } from './wallet';\nimport { toHex, bsv, signTx } from 'scryptlib';\nimport { signInput, toBsvTx } from './wutils';\nimport axios from 'axios';\n\n\nexport class LocalWallet extends wallet {\n  API_PREFIX: string;\n  privKey: any;\n  constructor(network: NetWork, key: string) {\n    super(network);\n    this.API_PREFIX = `https://api.whatsonchain.com/v1/bsv/${network == NetWork.Testnet ? 'test' : 'main'}`;\n    this.privKey = key ? new bsv.PrivateKey.fromWIF(key) : new bsv.PrivateKey.fromRandom(network);\n  }\n\n\n  requestAccount(name: string, permissions: string[]): Promise<Account> {\n    throw new Error('Method not implemented.');\n  }\n\n  async getbalance(): Promise<number> {\n\n    const {\n      data: balance\n    } = await axios.get(`${this.API_PREFIX}/address/${this.privKey.toAddress()}/balance`, {\n      timeout: 5000\n    });\n\n    return balance.confirmed + balance.unconfirmed;\n  }\n\n  async signRawTransaction(tx: Tx,\n    inputIndex: number,\n    sigHashType: SignType\n  ): Promise<string> {\n\n\n    const tx_ = toBsvTx(tx);\n\n    const utxo = tx.inputs[inputIndex].utxo;\n\n    return signInput(this.privKey, tx_, inputIndex, sigHashType, utxo);\n  }\n\n\n  async getSignature(tx: Tx,\n    inputIndex: number,\n    sigHashType: SignType\n  ): Promise<string> {\n\n\n    const tx_ = toBsvTx(tx);\n\n    return signTx(tx_, this.privKey, tx_.inputs[inputIndex].output.script.toASM(), tx_.inputs[inputIndex].output.satoshisBN, inputIndex, sigHashType);\n\n  }\n\n  async sendRawTransaction(rawTx: string): Promise<string> {\n\n    // 1 second per KB\n\n    const size = Math.max(1, rawTx.length / 2 / 1024); //KB\n    const time = Math.max(10000, 1000 * size);\n    const {\n      data: txid\n    } = await axios.post(`${this.API_PREFIX}/tx/raw`, {\n      txhex: rawTx\n    }, {\n      timeout: time\n    });\n    return txid;\n  }\n\n  async listUnspent(minAmount: number, options?: { purpose?: string; }): Promise<UTXO[]> {\n    return axios.get(`${this.API_PREFIX}/address/${this.privKey.toAddress()}/unspent`, {\n      timeout: 10000\n    }).then(res => {\n      return res.data.filter((utxo: any) => utxo.value >= minAmount).map((utxo: any) => {\n        return {\n          txHash: utxo.tx_hash,\n          outputIndex: utxo.tx_pos,\n          satoshis: utxo.value,\n          script: bsv.Script.buildPublicKeyHashOut(this.privKey.toAddress()).toHex(),\n        } as UTXO;\n      });\n    });\n  }\n\n\n  getRawChangeAddress(options?: { purpose?: string; }): Promise<string> {\n\n    return new Promise(resolve => resolve(this.privKey.toAddress() + ''));\n  }\n\n\n  getPublicKey(options?: { purpose?: string; }): Promise<string> {\n\n    return new Promise(resolve => resolve(toHex(this.privKey.publicKey)));\n  }\n\n}","import { promises } from 'dns';\nimport { buildContractClass, buildTypeClasses, ScryptType, SigHashPreimage, bsv, getPreimage, toHex } from 'scryptlib';\nimport { } from 'scryptlib';\nimport { Output, UTXO, wallet, Tx, Input, SignType, NetWork } from './wallet';\nimport axios from 'axios';\nimport { AbstractContract } from 'scryptlib/dist/contract';\nimport { toRawTx } from './wutils';\nimport { LocalWallet } from './localwallet';\nconst WEB3_VERSION = '0.0.1';\n\nconst FEE = 2000;\n\nexport class web3 {\n\n\n  static wallet: wallet;\n\n\n  static setWallet(wallet: wallet) {\n    web3.wallet = wallet;\n  }\n\n\n  static version() {\n    return WEB3_VERSION;\n  }\n\n\n  static loadContract(url: string): Promise<{\n    contractClass: typeof AbstractContract,\n    types: Record<string, typeof ScryptType>\n  }> {\n\n    return axios.get(url, {\n      timeout: 10000\n    }).then(res => {\n\n      return {\n        contractClass: buildContractClass(res.data),\n        types: buildTypeClasses(res.data)\n      };\n    });\n  }\n\n\n\n  static async buildDeployTx(contract: AbstractContract, amountInContract: number, alicePrivateKey: string, bobPrivateKey: string): Promise<Tx> {\n\n    let aliceWallet = new LocalWallet(NetWork.Mainnet, alicePrivateKey);\n    let bobWallet = new LocalWallet(NetWork.Mainnet, bobPrivateKey);\n\n    const aliceChangeAddress = await aliceWallet.getRawChangeAddress();\n    const bobChangeAddress = await bobWallet.getRawChangeAddress();\n\n    const tx: Tx = {\n      inputs: [],\n      outputs: []\n    };\n\n    tx.outputs.push({\n      script: contract.lockingScript.toHex(),\n      satoshis: amountInContract * 2\n    });\n\n    const minAmount = amountInContract + FEE;\n\n    return aliceWallet.listUnspent(minAmount, {\n      purpose: 'change'\n    }).then(async (utxos: UTXO[]) => {\n\n      if (utxos.length === 0) {\n        throw new Error('no utxos');\n      }\n\n      //add input which using utxo from alice\n      tx.inputs.push(\n        {\n          utxo: utxos[0],\n          script: '',\n          sequence: 0\n        }\n      );\n\n      const changeAmount = utxos[0].satoshis - amountInContract - FEE;\n\n      if (changeAmount <= 0) {\n        throw new Error('fund is not enough');\n      }\n\n      //add alice change output\n\n      tx.outputs.push(\n        {\n          script: bsv.Script.buildPublicKeyHashOut(aliceChangeAddress).toHex(),\n          satoshis: changeAmount\n        }\n      );\n\n      return tx;\n    }).then(tx => {\n      return bobWallet.listUnspent(minAmount, {\n        purpose: 'change'\n      }).then(async (utxos: UTXO[]) => {\n\n        if (utxos.length === 0) {\n          throw new Error('no utxos');\n        }\n\n        //add input which using utxo from bob\n        tx.inputs.push(\n          {\n            utxo: utxos[0],\n            script: '',\n            sequence: 0\n          }\n        );\n\n        const changeAmount = utxos[0].satoshis - amountInContract - FEE;\n\n        if (changeAmount <= 0) {\n          throw new Error('fund is not enough');\n        }\n\n        //add bob change output\n        tx.outputs.push(\n          {\n            script: bsv.Script.buildPublicKeyHashOut(bobChangeAddress).toHex(),\n            satoshis: changeAmount\n          }\n        );\n\n        return tx;\n\n      })\n    }).then(tx => {\n      //alice sign\n      return aliceWallet.signRawTransaction(tx, 0, SignType.ALL).then(unlockscript => {\n        tx.inputs[0].script = unlockscript;\n        return tx;\n      })\n    }).then(tx => {\n      //bob sign\n      return bobWallet.signRawTransaction(tx, 1, SignType.ALL).then(unlockscript => {\n        tx.inputs[1].script = unlockscript;\n        return tx;\n      })\n    })\n  }\n\n\n  static async sendRawTx(rawTx: string): Promise<string> {\n    return web3.wallet.sendRawTransaction(rawTx);\n  }\n\n  static async sendTx(tx: Tx): Promise<string> {\n    return web3.wallet.sendRawTransaction(toRawTx(tx));\n  }\n\n\n  static async deploy(contract: AbstractContract, amountInContract: number, alicePrivateKey: string, bobPrivateKey: string): Promise<[Tx, string]> {\n    return web3.buildDeployTx(contract, amountInContract, alicePrivateKey, bobPrivateKey).then(async tx => {\n      return web3.sendTx(tx).then(txid => {\n        return [tx, txid];\n      })\n    });\n  }\n}","\nimport { EventEmitter } from 'events';\n\nclass Server extends EventEmitter {\n    player = ''\n    privKey = ''\n    constructor() {\n        super();\n        var urlParams = new URLSearchParams(window.location.search);\n        this.player = urlParams.get('player') || \"alice\";\n        const self = this;\n        window.addEventListener('storage', (e) => {\n            // When local storage changes, dump the list to\n            // the console.\n            console.log('on storage change ' + this.player, e)\n\n\n            if (e.key === \"game\") {\n                try {\n                    let gameJson = window.localStorage.getItem('game');\n                    if (gameJson && gameJson !== null) {\n                        let game = JSON.parse(gameJson);\n\n                        if (game.event) {\n\n                            self.emit(game.event, game)\n                        }\n\n                    }\n                } catch (e) {\n                    console.error(' storage change error', e)\n                }\n            }\n\n        }, false);\n\n    }\n\n\n\n    deleteGame = () => {\n        console.log('deleteGame');\n        window.localStorage.removeItem('game');\n    }\n\n\n    createGame = (game) => {\n        game.event = 'createGame';\n        console.log('createGame', game);\n        return window.localStorage.setItem('game', JSON.stringify(game));\n    }\n\n    saveGame = (game, event) => {\n        game.event = event;\n        console.log('saveGame', game);\n        window.localStorage.setItem('game', JSON.stringify(game));\n    }\n\n\n\n    getGame = () => {\n        let gameJson = window.localStorage.getItem('game');\n        if (gameJson && gameJson !== null) {\n            return JSON.parse(gameJson);\n        }\n        return undefined\n    }\n\n\n\n    getCurrentPlayer = () => (this.player);\n\n\n    savePrivateKey = (key) => {\n        this.privKey = key;\n        window.localStorage.setItem(this.player, key);\n    }\n\n\n    getPrivateKey = () => {\n        if (this.player) {\n            this.privKey = window.localStorage.getItem(this.player);\n        }\n\n        return this.privKey;\n    }\n\n    getBobPrivateKey = () => {\n\n        return window.localStorage.getItem('bob');\n    }\n\n    getAlicePrivateKey = () => {\n\n        return window.localStorage.getItem('alice');\n    }\n\n\n    addDeployedListener(cb) {\n        console.log('addDeployedListener');\n        this.on('deployed', cb);\n    }\n\n\n    removeDeployedListener(cb) {\n        console.log('removeDeployedListener');\n        this.off('deployed', cb)\n    }\n\n\n    addNextListener(cb) {\n        console.log('addNextListener');\n        this.on('next', cb);\n    }\n\n    removeNextListener(cb) {\n        console.log('removeNextListener');\n        this.off('next', cb)\n    }\n}\n\nconst server = new Server();\n\nexport default server;","import React from 'react';\nimport Board from './Board';\nimport { bsv, Bytes, Sig, toHex } from 'scryptlib';\nimport { web3, Input, SignType } from './web3';\n\nimport server from './Server';\nimport { getPreimage } from './web3/wutils';\n\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[b] && squares[c] && squares[a].label === squares[b].label && squares[a].label === squares[c].label) {\n      return { winner: squares[a], winnerRow: lines[i] };\n    }\n  }\n\n  return { winner: null, winnerRow: null };\n};\n\nconst getLocation = (move) => {\n  const locationMap = {\n    0: 'row: 1, col: 1',\n    1: 'row: 1, col: 2',\n    2: 'row: 1, col: 3',\n    3: 'row: 2, col: 1',\n    4: 'row: 2, col: 2',\n    5: 'row: 2, col: 3',\n    6: 'row: 3, col: 1',\n    7: 'row: 3, col: 2',\n    8: 'row: 3, col: 3',\n  };\n\n  return locationMap[move];\n};\n\nconst initialState = {\n  history: [\n    {\n      squares: Array(9).fill(null),\n    },\n  ],\n  currentStepNumber: 0,\n  xIsNext: true,\n};\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (props.game && props.game.gameState) {\n      this.state = props.game.gameState;\n    } else {\n      this.state = initialState;\n    }\n  }\n\n\n\n  componentWillReceiveProps(nextProps) {\n    console.log('componentWillReceiveProps', nextProps)\n    if (nextProps.game && nextProps.game.gameState) {\n      this.setState(nextProps.game.gameState);\n    } else {\n      this.setState(initialState);\n    }\n  }\n\n\n  calculateNewState(squares) {\n    return (!this.state.xIsNext ? '00' : '01') + squares.map(square => {\n\n      if (square && square.label === 'X') {\n        return '01'\n      } else if (square && square.label === 'O') {\n        return '02'\n      } else {\n        return '00';\n      }\n    }).join('');\n  }\n\n\n  checkIfValid(i, squares) {\n    if (!this.props.game || !this.props.game.lastUtxo) {\n      return false;\n    }\n\n    if (calculateWinner(squares).winner || squares[i]) {\n      return false;\n    }\n    squares[i] = { label: this.state.xIsNext ? 'X' : 'O' };\n    let player = server.getCurrentPlayer();\n\n    if (player === \"alice\" && this.state.xIsNext) {\n      return true;\n    } else if (player === \"bob\" && !this.state.xIsNext) {\n      return true;\n    } else {\n      alert(`now is ${this.state.xIsNext ? 'Alice' : 'Bob'} turn `)\n      console.error(`now is ${this.state.xIsNext ? 'Alice' : 'Bob'} turn , but got ${player}`)\n      return false;\n    }\n  }\n\n\n  async buildCallContractTx(i, newState, squares, history) {\n    let newLockingScript = \"\";\n    let winner = calculateWinner(squares).winner;\n    const FEE = 3000;\n    let outputs = [];\n    let amount = this.props.game.lastUtxo.satoshis - FEE;\n    if (winner) {\n      // winner is current player\n\n      let address = await web3.wallet.getRawChangeAddress();\n\n      newLockingScript = bsv.Script.buildPublicKeyHashOut(address).toHex();\n\n      outputs.push({\n        satoshis: amount,\n        script: newLockingScript\n      })\n\n    } else if (history.length >= 9) {\n\n      const aliceAddress = new bsv.PublicKey(this.props.game.alicePubKey, {\n        network: bsv.Networks.testnet\n      });\n      const bobAddress = new bsv.PublicKey(this.props.game.bobPubKey, {\n        network: bsv.Networks.testnet\n      });\n\n      //no body win\n      const aliceLockingScript = bsv.Script.buildPublicKeyHashOut(aliceAddress.toAddress(bsv.Networks.testnet)).toHex();\n      const bobLockingScript = bsv.Script.buildPublicKeyHashOut(bobAddress.toAddress(bsv.Networks.testnet)).toHex();\n      amount = (this.props.game.lastUtxo.satoshis - FEE) / 2;\n\n      outputs.push({\n        satoshis: amount,\n        script: aliceLockingScript\n      })\n\n      outputs.push({\n        satoshis: amount,\n        script: bobLockingScript\n      })\n\n    } else {\n      //next\n      newLockingScript = [this.props.contractInstance.codePart.toHex(), bsv.Script.fromASM(newState).toHex()].join('');\n      outputs.push({\n        satoshis: amount,\n        script: newLockingScript\n      })\n    }\n\n\n    if (outputs[0].satoshis <= 0) {\n      alert(`fund in contract is too low `)\n      return undefined;\n    }\n\n\n    let tx = {\n      inputs: [{\n        utxo: this.props.game.lastUtxo,\n        sequence: 0,\n        script: \"\"\n      }],\n      outputs: outputs\n    }\n\n    let preimage = getPreimage(tx);\n\n    let sig = await web3.wallet.getSignature(tx, 0, SignType.ALL, true);\n\n    let unlockScript = this.props.contractInstance.move(i, new Sig(toHex(sig)), amount, preimage).toHex();\n\n    tx.inputs[0].script = unlockScript;\n\n    return tx;\n  }\n\n\n  async handleClick(i) {\n\n\n    const history = this.state.history.slice(0, this.state.currentStepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (!this.checkIfValid(i, squares)) {\n      console.error('handleClick checkIfValid false...')\n      return;\n    }\n\n\n    let newState = this.calculateNewState(squares);\n\n    let tx = await this.buildCallContractTx(i, newState, squares, history);\n\n    if (!tx) {\n      console.error('buildCallContractTx fail...')\n      return;\n    }\n\n    web3.sendTx(tx).then(txid => {\n\n      squares[i].tx = txid;\n      squares[i].n = history.length;\n      let gameState = {\n        history: history.concat([\n          {\n            squares,\n            currentLocation: getLocation(i),\n            stepNumber: history.length,\n          },\n        ]),\n        xIsNext: !this.state.xIsNext,\n        currentStepNumber: history.length,\n      };\n\n      server.saveGame(Object.assign({}, this.props.game, {\n        gameState: gameState,\n        lastUtxo: {\n          txHash: txid,\n          outputIndex: 0,\n          satoshis: tx.outputs[0].satoshis,\n          script: tx.outputs[0].script\n        }\n      }), 'next')\n\n      this.setState(gameState);\n\n    }).catch(e => {\n      if (e.response) {\n        alert('sendTx errror: ' + e.response.data)\n      }\n      console.error('sendTx errror', e.response)\n    })\n\n  }\n\n\n  render() {\n    const { history } = this.state;\n    const current = history[this.state.currentStepNumber];\n    const { winner, winnerRow } = calculateWinner(current.squares);\n\n\n\n    const game = server.getGame();\n\n\n\n\n    let status;\n    let end;\n\n    let icon;\n\n\n    if (server.getCurrentPlayer() === 'bob') {\n      icon = <div className=\"bob\">Bob<img src=\"/tic-tac-toe/bob.png\"></img></div>\n    } else {\n      icon = <div className=\"alice\">Alice<img src=\"/tic-tac-toe/alice.jpg\"></img></div>\n    }\n\n    let bet;\n    if (game && game.deploy) {\n      bet = <div className=\"bet\"><a href={`https://whatsonchain.com/tx/${game.deploy}`} target=\"_blank\">Bet transaction</a> </div>\n    }\n\n    let player = server.getCurrentPlayer();\n    if (winner) {\n      let winnerName = winner.label === 'X' ? 'Alice' : 'Bob';\n      status = `Winner is ${winnerName}`;\n      if (game && game.lastUtxo) {\n        end = <div className=\"end\"><a href={`https://whatsonchain.com/tx/${game.lastUtxo.txHash}`} target=\"_blank\">Withdraw transaction</a> </div>\n      }\n    } else if (history.length === 10) {\n      status = 'Draw. No one won.';\n      if (game && game.lastUtxo) {\n        end = <div className=\"end\"><a href={`https://whatsonchain.com/tx/${game.lastUtxo.txHash}`} target=\"_blank\">Withdraw transaction</a> </div>\n      }\n    } else {\n\n      let nexter = this.state.xIsNext ? 'Alice' : 'Bob';\n\n      status = `Next player: ${nexter}`;\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n\n          <div className=\"game-title\">\n            {icon}\n            <div className=\"game-status\"> {status} </div>\n          </div>\n\n          <Board\n            squares={current.squares}\n            winnerSquares={winnerRow}\n            onClick={i => this.handleClick(i)}\n          />\n\n          <div className=\"game-bottom\">\n            {bet}\n            {end}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","\nimport React, { useState, useRef, useEffect } from 'react';\n\nimport { web3 } from './web3';\nimport server from './Server';\n\nfunction makeid(length) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\n\nfunction TitleBar(props) {\n    const forceUpdate = React.useReducer(bool => !bool)[1];\n\n    const amountRef = useRef(null);\n\n    const onStart = (e) => {\n\n        if (!web3.wallet) {\n            alert(\"Pelease create wallet first\")\n            return;\n        }\n        let amount = parseInt(amountRef.current.value);\n\n        if (amount < 20000) {\n            alert(\"The bet fund is too small to play, at least 20000\")\n            return;\n        }\n\n        if (!isNaN(amount)) {\n            props.startBet(amount);\n        } else {\n            console.error(`${amountRef.current.value} is not number`)\n        }\n    }\n\n    const onCancel = (e) => {\n        props.cancelBet();\n    }\n\n\n\n    if (props.started) {\n\n        return (\n            <div>\n                The game is in progress ...\n                <button className=\"pure-button cancel\" onClick={onCancel}>Restart</button>\n            </div>\n        );\n    }\n    else if (props.game && props.game.creator === server.getCurrentPlayer()) {\n\n        const player = server.getCurrentPlayer() === 'alice' ? 'bob' : 'alice';\n\n        var url = window.location.href.split('?')[0];\n\n        return (\n            <div>\n                Waiting someone join the game ...\n                <a className=\"pure-button\" href={url + '?player=' + player} target=\"_blank\"> Join</a>\n                <button className=\"pure-button cancel\" onClick={onCancel}>Restart</button>\n            </div>\n        );\n\n    } else if (props.game && props.game.creator !== server.getCurrentPlayer()) {\n\n        return (\n            <div>\n                Joining the game...\n            </div>\n        );\n    }\n    else {\n        return (\n            <div>\n                <label>Bet amount:\n                    <input ref={amountRef} type=\"number\" name=\"amount\" placeholder=\"in satoshis\" />\n                </label>\n                <button className=\"start\" onClick={onStart}>Start Bet</button>\n            </div>\n        );\n    }\n}\n\nexport default TitleBar;\n","\nimport * as QRCode from 'qrcode.react';\nimport { bsv } from 'scryptlib';\nimport React, { useState, useEffect } from 'react';\nimport { web3, LocalWallet, NetWork, SignType } from './web3';\nimport { useInterval } from './hooks';\nimport server from './Server';\n\nconst Wallet = props => {\n\n    const [address, setAddress] = useState('')\n    const [balance, setBalance] = useState(0)\n\n    useEffect(() => {\n\n        if (web3.wallet) {\n            web3.wallet.getRawChangeAddress().then(address => {\n                setAddress(address)\n            })\n\n            web3.wallet.getbalance().then(balance => {\n                setBalance(balance)\n            })\n        } else if (server.getPrivateKey()) {\n            web3.setWallet(new LocalWallet(NetWork.Mainnet, server.getPrivateKey()));\n            web3.wallet.getRawChangeAddress().then(address => {\n                setAddress(address)\n            })\n        }\n    });\n\n\n    useInterval(() => {\n\n        if (web3.wallet) {\n            web3.wallet.getbalance().then(b => {\n                console.log(`update balance old: ${balance} new: ${b}`)\n\n                if (balance === 0 && b > 0) {\n                    alert('Successfully deposit, try F5 to reload the page')\n                }\n\n                setBalance(b)\n            })\n        }\n\n    }, 5000);\n\n\n    const onClick = (e) => {\n\n        try {\n            const privateKey = new bsv.PrivateKey.fromRandom('mainnet')\n\n            setAddress(privateKey.toAddress() + '')\n            web3.setWallet(new LocalWallet(NetWork.Mainnet, privateKey.toWIF()));\n\n            server.savePrivateKey(privateKey.toWIF());\n        } catch (e) {\n            console.log('wallet onChange error', e)\n        }\n    };\n\n\n    const onWithdraw = async (e) => {\n\n        try {\n\n            const tx = {\n                inputs: [],\n                outputs: []\n            };\n\n            let withdrawAddress = document.getElementById('withdrawAddress').value;\n\n            let address = new bsv.Address.fromString(withdrawAddress);\n\n            if(address && address.type === 'pubkeyhash' && address.network.name === 'livenet') {\n                console.log('adddress', address )\n            } else {\n                throw 'invalid bitcoin address';\n            }\n            \n            let changeAddress = address + ''\n\n            web3.wallet.listUnspent(0).then(utxos => {\n\n                let total = 0 ;\n                utxos.forEach(utxo => {\n                    total += utxo.satoshis;\n                    tx.inputs.push(\n                        {\n                            utxo: utxo,\n                            script: '',\n                            sequence: 0\n                        }\n                    );\n                })\n\n                const FEE = 500;\n                const changeAmount = total - FEE;\n\n                if (changeAmount <= 0) {\n                    throw new Error('fund is not enough');\n                }\n\n                //add change output\n\n                tx.outputs.push(\n                    {\n                        script: bsv.Script.buildPublicKeyHashOut(changeAddress).toHex(),\n                        satoshis: changeAmount\n                    }\n                );\n\n                return tx;\n            })\n            .then(tx => {\n                //alice sign\n\n                tx.inputs.forEach(async (input, index) => {\n                    let unlockscript = await web3.wallet.signRawTransaction(tx, index, SignType.ALL);\n\n                    tx.inputs[index].script = unlockscript;\n\n                })\n  \n                return tx;\n            }).then(tx => {\n                console.log('send tx', tx)\n                return web3.sendTx(tx);\n            }).then(txid => {\n                console.log('console txid', txid)\n            }).catch(e => {\n                alert('withdraw error ' + e)\n            })\n        \n    } catch(e) {\n        alert('withdraw error ' + e)\n    }\n\n}\n\n\n\n    if (web3.wallet) {\n        return <div className=\"wallet\">\n\n            <div className=\"walletInfo\">\n                <div className=\"address\" >\n                    <label>Address: {address}</label>\n                </div>\n\n                <div className=\"balance\">\n                    <label >Balance: {balance}</label>\n                </div>\n\n                <div className=\"fundtips\">\n                    <label >You can fund the address with your wallet</label>\n                    <br></br>\n                    <label className=\"warnning\">Warnning:  don't funds it with too much coin.</label>\n                    \n                </div>\n                <div className=\"withdraw\" >\n                    <input id=\"withdrawAddress\" placeholder=\"Bitcoin Address\" type='text' ></input>\n                    <button  onClick={onWithdraw}>Withdraw Fund</button>\n                </div>\n               \n            </div>\n            <div className=\"walletqrcode\">\n                <QRCode value={address} ></QRCode>\n            </div>\n\n        </div>\n    } else {\n        return <div className=\"wallet\">\n            <button className=\"pure-button button-large\" onClick={onClick}>Create Wallet</button>\n        </div>\n    }\n\n}\n\nexport default Wallet;\n\n\n","\nimport React, { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    });\n\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n    }, [delay]);\n}\n","import './App.css';\nimport Game from './Game';\nimport React, { useState, useEffect } from 'react';\nimport TitleBar from './TitleBar';\nimport { Bytes, PubKey, toHex, newCall } from 'scryptlib';\n\nimport { web3, SignType } from './web3';\nimport Wallet from './wallet';\nimport { useInterval } from './hooks';\nimport server from './Server';\n\n\n\nfunction App() {\n\n  const [started, updateStart] = useState(false);\n\n  const [contractInstance, updateContractInstance] = useState(null);\n\n  const forceUpdate = React.useReducer(bool => !bool)[1];\n\n  const startBet = async (amount) => {\n\n    //let tx = await web3.deploy(contractInstance, 10000);\n    console.log('startBet with amount', amount)\n\n    if (web3.wallet) {\n\n      let balance = await web3.wallet.getbalance();\n\n      if (amount > balance) {\n        alert('Please fund your wallet address first')\n        return;\n      }\n\n      let publicKey = await web3.wallet.getPublicKey();\n\n      let player = server.getCurrentPlayer();\n\n      let game = {\n        \"amount\": amount,\n        \"tx\": {\n          inputs: [],\n          outputs: []\n        },\n        \"name\": \"tic-tac-toe\",\n        \"alicePubKey\": \"\",\n        \"bobPubKey\": \"\",\n        \"creator\": player,\n        \"player\": \"\",\n        \"date\": new Date()\n      }\n\n      if (player === \"alice\") {\n        Object.assign(game, {\n          \"alicePubKey\": publicKey,\n        })\n\n      } else {\n        Object.assign(game, {\n          \"bobPubKey\": publicKey,\n        })\n      }\n\n      server.createGame(game)\n\n      forceUpdate();\n    }\n  }\n\n  const cancelBet = () => {\n\n    server.deleteGame();\n    updateStart(false)\n    forceUpdate();\n  }\n\n\n\n\n  const onDeployed = async (game) => {\n    console.log('onDeployed...')\n\n    if (game && game.alicePubKey && game.bobPubKey) {\n      fetchContract(game.alicePubKey, game.bobPubKey)\n    }\n\n    updateStart(true);\n  }\n\n\n  const onNext = async (game) => {\n    //BOB SIGN\n    console.log(\"onNext\", game)\n    forceUpdate();\n  }\n\n\n  async function fetchContract(alicePubKey, bobPubKey) {\n\n    if (contractInstance === null && alicePubKey && bobPubKey) {\n      let {\n        contractClass: TictactoeContractClass\n      } = await web3.loadContract(\"/tic-tac-toe/tictactoe_desc.json\");\n\n      let c = newCall(TictactoeContractClass, [new PubKey(toHex(alicePubKey)), new PubKey(toHex(bobPubKey))])\n      c.setDataPart('00000000000000000000');\n      updateContractInstance(c);\n      console.log('fetchContract successfully')\n      return c;\n    }\n    return contractInstance\n  }\n\n\n\n  async function joinGame(game, alicePrivateKey, bobPrivateKey) {\n    console.log('joinGame...', game)\n    let pubKey = await web3.wallet.getPublicKey();\n\n    let balance = await web3.wallet.getbalance();\n\n\n    if (balance <= game.amount) {\n      alert('no available utxos or  balance is not enough, please fund your wallet')\n      return;\n    }\n\n    let player = server.getCurrentPlayer();\n\n    if (player === \"alice\") {\n      Object.assign(game, {\n        \"alicePubKey\": pubKey,\n        \"player\": player\n      })\n\n    } else {\n      Object.assign(game, {\n        \"bobPubKey\": pubKey,\n        \"player\": player\n      })\n    }\n\n\n    let contract = await fetchContract(game.alicePubKey, game.bobPubKey);\n\n    console.log('fetchContract', contract, player)\n    if (contract != null) {\n      web3.deploy(contract, game.amount, alicePrivateKey, bobPrivateKey).then(([tx, txid]) => {\n        game.lastUtxo = {\n          txHash: txid,\n          outputIndex: 0,\n          satoshis: tx.outputs[0].satoshis,\n          script: tx.outputs[0].script\n        };\n\n        game.tx = tx;\n        game.deploy = txid;\n\n        server.saveGame(game, \"deployed\")\n        updateStart(true)\n      }).catch(e => {\n        if (e.message === 'no utxos') {\n          alert('no available utxos, please fund your wallet')\n        }\n        console.error('deploy error', e)\n      })\n    }\n  }\n\n\n\n  useEffect(() => {\n\n\n\n\n    if (!web3.wallet) {\n      setTimeout(() => {\n        alert('Please create your wallet and fund it');\n      }, 1000)\n    } else {\n\n      let game = server.getGame();\n\n      if (game && game.lastUtxo) {\n        updateStart(true)\n      }\n\n      if (game && game.alicePubKey && game.bobPubKey) {\n        fetchContract(game.alicePubKey, game.bobPubKey)\n      }\n\n      let alicePrivateKey = server.getAlicePrivateKey();\n      let bobPrivateKey = server.getBobPrivateKey();\n      if (game && !game.deploy && alicePrivateKey && bobPrivateKey) {\n        joinGame(game, alicePrivateKey, bobPrivateKey)\n      }\n\n    }\n\n\n    server.addDeployedListener(onDeployed);\n    server.addNextListener(onNext)\n    return () => {\n\n      server.removeDeployedListener(onDeployed)\n      server.removeNextListener(onNext)\n    }\n\n  }, [contractInstance]);\n\n\n\n  const game = server.getGame();\n\n  return (\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n        <h2>\n          Play Tic-Tac-Toe on Bitcoin\n        </h2>\n        <TitleBar startBet={startBet} cancelBet={cancelBet} started={started} game={game} />\n\n        <Game game={game} contractInstance={contractInstance} />\n\n        <Wallet ></Wallet>\n      </header>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}