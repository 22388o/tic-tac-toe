{"version":3,"sources":["logo.svg","Square.js","Board.js","Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","winnerClass","onClick","value","Board","row","col","board","cellCounter","i","columns","j","push","this","renderSquare","winnerSquares","squares","createBoard","React","Component","calculateWinner","lines","length","a","b","c","winner","winnerRow","initialState","history","Array","fill","currentStepNumber","xIsNext","Game","state","move","slice","setState","concat","currentLocation","0","1","2","3","4","5","6","7","8","stepNumber","step","reverse","status","current","moves","map","desc","classButton","jumpTo","handleClick","sortMoves","reset","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d67b7427.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\n\nconst Square = props => (\n  <button className={`${props.winnerClass} square`} onClick={props.onClick}>\n    {props.value}\n  </button>\n);\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\n\nclass Board extends React.Component {\n  createBoard(row, col) {\n    const board = [];\n    let cellCounter = 0;\n\n    for (let i = 0; i < row; i += 1) {\n      const columns = [];\n      for (let j = 0; j < col; j += 1) {\n        columns.push(this.renderSquare(cellCounter++));\n      }\n      board.push(<div key={i} className=\"board-row\">{columns}</div>);\n    }\n\n    return board;\n  }\n\n  renderSquare(i) {\n    const winnerClass =\n      this.props.winnerSquares &&\n      (this.props.winnerSquares[0] === i ||\n        this.props.winnerSquares[1] === i ||\n        this.props.winnerSquares[2] === i)\n        ? 'square--green'\n        : '';\n\n    return (\n      <Square\n        winnerClass={winnerClass}\n        key={i}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return <div>{this.createBoard(3, 3)}</div>;\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport Board from './Board';\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], winnerRow: lines[i] };\n    }\n  }\n\n  return { winner: null, winnerRow: null };\n};\n\nconst getLocation = (move) => {\n  const locationMap = {\n    0: 'row: 1, col: 1',\n    1: 'row: 1, col: 2',\n    2: 'row: 1, col: 3',\n    3: 'row: 2, col: 1',\n    4: 'row: 2, col: 2',\n    5: 'row: 2, col: 3',\n    6: 'row: 3, col: 1',\n    7: 'row: 3, col: 2',\n    8: 'row: 3, col: 3',\n  };\n\n  return locationMap[move];\n};\n\nconst initialState = {\n  history: [\n    {\n      squares: Array(9).fill(null),\n    },\n  ],\n  currentStepNumber: 0,\n  xIsNext: true,\n};\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.currentStepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares).winner || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([\n        {\n          squares,\n          currentLocation: getLocation(i),\n          stepNumber: history.length,\n        },\n      ]),\n      xIsNext: !this.state.xIsNext,\n      currentStepNumber: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      currentStepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n  }\n\n  sortMoves() {\n    this.setState({\n      history: this.state.history.reverse(),\n    });\n  }\n\n  reset() {\n    this.setState(initialState);\n  }\n\n  render() {\n    const { history } = this.state;\n    const current = history[this.state.currentStepNumber];\n    const { winner, winnerRow } = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const currentLocation = step.currentLocation ? `(${step.currentLocation})` : '';\n      const desc = step.stepNumber ? `Go to move #${step.stepNumber}` : 'Go to game start';\n      const classButton = move === this.state.currentStepNumber ? 'button--green' : '';\n\n      return (\n        <li key={move}>\n          <button className={`${classButton} button`} onClick={() => this.jumpTo(move)}>\n            {`${desc} ${currentLocation}`}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = `Winner ${winner}`;\n    } else if (history.length === 10) {\n      status = 'Draw. No one won.';\n    } else {\n      status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            winnerSquares={winnerRow}\n            onClick={i => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <button className=\"button\" onClick={() => this.sortMoves()}>\n            Sort moves\n          </button>\n          <button className=\"button button--new-game\" onClick={() => this.reset()}>\n            New game\n          </button>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import logo from './logo.svg';\nimport './App.css';\nimport Game from './Game';\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>\n          sCrypt dapp tic-tac-toe\n        </h1>\n        <Game />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}