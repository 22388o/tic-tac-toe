{"version":3,"sources":["web3/wallet.ts","Square.js","Board.js","web3/web3.ts","web3/wutils.ts","web3/localwallet.ts","Server.js","Game.js","TitleBar.js","wallet.js","hooks.js","App.js","reportWebVitals.js","index.js"],"names":["NetWork","SignType","Square","props","tx","value","className","winnerClass","onClick","href","target","title","label","Board","row","col","board","cellCounter","i","columns","j","push","this","renderSquare","winnerSquares","squares","createBoard","React","Component","wallet","network","tx_","bsv","Transaction","inputs","forEach","input","addInput","Input","prevTxId","utxo","txHash","outputIndex","script","Script","fromHex","satoshis","outputs","output","addOutput","Output","toBsvTx","toString","WEB3_VERSION","FEE","web3","url","axios","get","timeout","then","res","contractClass","buildContractClass","data","types","buildTypeClasses","contract","amountInContract","buildUnsignDeployTx","a","signTx","ALL","sig","payAmount","changeAddress","queryUtxos","purpose","utxos","length","Error","inputIndex","sequence","changeAmount","buildPublicKeyHashOut","toHex","lockingScript","sigHashType","bsvTx","getPreimage","toASM","rawTx","sendTx","toHexBsvTx","buildDeployTx","signInput","privateKey","Signature","publicKey","signature","Sighash","sign","satoshisBN","sigtype","buildPublicKeyHashIn","toDER","console","log","LocalWallet","key","API_PREFIX","privKey","Testnet","PrivateKey","fromWIF","fromRandom","name","permissions","toAddress","balance","confirmed","unconfirmed","onlySig","size","Math","max","time","post","txhex","txid","minAmount","options","filter","map","tx_hash","tx_pos","Promise","resolve","server","player","existGamebySelf","game","window","localStorage","getItem","JSON","parse","creator","existGamebyOther","deleteGame","removeItem","createGame","event","setItem","stringify","saveGame","getGame","gameJson","getIdentity","savePrivateKey","getPrivateKey","urlParams","URLSearchParams","location","search","self","addEventListener","e","emit","error","cb","on","off","EventEmitter","calculateWinner","lines","b","c","winner","winnerRow","initialState","history","Array","fill","currentStepNumber","xIsNext","Game","gameState","state","nextProps","setState","lastUtxo","slice","current","alert","newState","square","join","newLockingScript","amount","address","aliceAddress","PublicKey","alicePubKey","Networks","testnet","bobAddress","bobPubKey","aliceLockingScript","bobLockingScript","contractInstance","codePart","fromASM","preimage","unlockScript","move","Sig","concat","currentLocation","0","1","2","3","4","5","6","7","8","stepNumber","Object","assign","catch","response","status","end","bet","deploy","winnerName","toUpperCase","nexter","handleClick","TitleBar","prop","useReducer","bool","amountRef","useRef","onCancel","cancelBet","useEffect","started","ref","type","placeholder","parseInt","isNaN","startBet","Wallet","useState","setAddress","setBalance","setWallet","updateWallet","callback","delay","savedCallback","id","setInterval","clearInterval","useInterval","toWIF","App","updateStart","updateContractInstance","forceUpdate","Date","onBobJoin","appendPayInput","onAliceSign","onDeployed","fetchContract","warn","onNext","loadContract","TictactoeContractClass","newCall","PubKey","setDataPart","message","bobJoin","setTimeout","addJoinListener","addAliceSignListener","addDeployedListener","addNextListener","removeAliceSignListener","removeDeployedListener","removeJoinListener","removeNextListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf8f68f6.chunk.js","sourcesContent":["\nimport { toHex, bsv } from 'scryptlib';\n\nexport interface UTXO {\n  txHash: number,\n  outputIndex: string;\n  satoshis: number;\n  script: string;\n}\n\nexport interface Output {\n  satoshis: number,\n  script: string;\n}\n\n\nexport interface Input {\n  utxo: UTXO,\n  sequence: number,\n  script: string;\n}\n\nexport interface Tx {\n  inputs: Input[],\n  outputs: Output[],\n}\n\nexport interface Account {\n  name: string,\n  paymail: string,\n  address: string,\n  permissions?: string[]\n}\n\n\nexport enum NetWork {\n  Testnet = 'testnet',\n  Mainnet = 'mainnet',\n  STN = 'STN'\n}\n\n\nexport enum SignType {\n  ALL = 0x00000001 | 0x00000040,\n  SINGLE = 0x00000003 | 0x00000040,\n  NONE = 0x00000002 | 0x00000040,\n  ANYONECANPAY_ALL = 0x00000001 | 0x00000040 | 0x00000080,\n  ANYONECANPAY_SINGLE = 0x00000003 | 0x00000040 | 0x00000080,\n  ANYONECANPAY_NONE = 0x00000002 | 0x00000040 | 0x00000080\n}\n\n\nexport abstract class wallet {\n\n  network: NetWork;\n\n  constructor(network: NetWork) {\n    this.network = network;\n  }\n\n\n  static toBsvTx(tx: Tx) {\n    const tx_ = new bsv.Transaction();\n\n    tx.inputs.forEach(input => {\n      tx_.addInput(new bsv.Transaction.Input({\n        prevTxId: input.utxo.txHash,\n        outputIndex: input.utxo.outputIndex,\n        script: input.script ? bsv.Script.fromHex(input.script) : new bsv.Script(),\n      }), bsv.Script.fromHex(input.utxo.script), input.utxo.satoshis);\n    });\n\n\n    tx.outputs.forEach(output => {\n      tx_.addOutput(new bsv.Transaction.Output({\n        script: bsv.Script.fromHex(output.script),\n        satoshis: output.satoshis,\n      }));\n    });\n\n    return tx_;\n  }\n\n  static toHexBsvTx(tx: Tx) {\n    return wallet.toBsvTx(tx).toString();\n  }\n\n\n  abstract requestAccount(name: string, permissions: string[]): Promise<Account>;\n\n  abstract balance(): Promise<number>;\n\n\n  abstract signTx(tx: Tx,\n    inputIndex: number,\n    sigHashType: SignType,\n    onlySig?: boolean,\n  ): Promise<string>;\n\n  abstract sendTx(rawTx: string): Promise<string>;\n\n  abstract queryUtxos(minAmount: number, options?: {\n    purpose?: string\n  }): Promise<UTXO[]>;\n\n  abstract changeAddress(options?: {\n    purpose?: string\n  }): Promise<string>;\n\n  abstract publicKey(options?: {\n    purpose?: string\n  }): Promise<string>;\n\n}","import React from 'react';\n\nconst Square = props => {\n\n\n\n  let tx = props.value ? `https://test.whatsonchain.com/tx/${props.value.tx}` : \"\";\n\n  return (\n    <button className={`${props.winnerClass} square`} onClick={props.onClick}>\n      {props.value ? <a href={tx} target=\"_blank\" title=\"Click to see the transaction\">{props.value.label}</a> : props.value}\n    </button>\n  )\n\n}\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\n\nclass Board extends React.Component {\n  createBoard(row, col) {\n    const board = [];\n    let cellCounter = 0;\n\n    for (let i = 0; i < row; i += 1) {\n      const columns = [];\n      for (let j = 0; j < col; j += 1) {\n        columns.push(this.renderSquare(cellCounter++));\n      }\n      board.push(<div key={i} className=\"board-row\">{columns}</div>);\n    }\n\n    return board;\n  }\n\n  renderSquare(i) {\n\n    const winnerClass =\n      this.props.winnerSquares &&\n        (this.props.winnerSquares[0] === i ||\n          this.props.winnerSquares[1] === i ||\n          this.props.winnerSquares[2] === i)\n        ? 'square--green'\n        : '';\n\n    return (\n      <Square\n        winnerClass={winnerClass}\n        key={i}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return <div>{this.createBoard(3, 3)}</div>;\n  }\n}\n\nexport default Board;\n","import { promises } from 'dns';\nimport { buildContractClass, buildTypeClasses, ScryptType, SigHashPreimage, bsv, getPreimage, toHex } from 'scryptlib';\nimport { } from 'scryptlib';\nimport { Output, UTXO, wallet, Tx, Input, SignType } from './wallet';\nimport axios from 'axios';\nimport { AbstractContract } from 'scryptlib/dist/contract';\nconst WEB3_VERSION = '0.0.1';\n\nconst FEE_PER_KB = 500;\nconst FEE = 1000;\n\nexport class web3 {\n\n\n  static wallet: wallet;\n\n\n  static setWallet(wallet: wallet) {\n    web3.wallet = wallet;\n  }\n\n\n  static version() {\n    return WEB3_VERSION;\n  }\n\n\n  static loadContract(url: string): Promise<{\n    contractClass: typeof AbstractContract,\n    types: Record<string, typeof ScryptType>\n  }> {\n\n    return axios.get(url, {\n      timeout: 10000\n    }).then(res => {\n\n      return {\n        contractClass: buildContractClass(res.data),\n        types: buildTypeClasses(res.data)\n      };\n    });\n  }\n\n\n\n  static async buildDeployTx(contract: AbstractContract, amountInContract: number): Promise<Tx> {\n\n    return web3.buildUnsignDeployTx(contract, amountInContract).then(async (tx: Tx) => {\n      const sig = await web3.wallet.signTx(tx, 0, SignType.ALL);\n      tx.inputs[0].script = sig;\n      return tx;\n    });\n  }\n\n\n\n  static async appendPayInput(tx: Tx, payAmount: number): Promise<Tx> {\n    const changeAddress = await web3.wallet.changeAddress();\n\n    return web3.wallet.queryUtxos(payAmount + FEE, {\n      purpose: 'change'\n    }).then(async (utxos: UTXO[]) => {\n\n\n      if (utxos.length === 0) {\n        throw new Error('no utxos');\n      }\n\n      const inputIndex = tx.inputs.length;\n      tx.inputs.push(\n        {\n          utxo: utxos[0],\n          script: '',\n          sequence: 0\n        }\n      );\n\n      const changeAmount = utxos[0].satoshis - payAmount - FEE;\n      tx.outputs.push(\n        {\n          script: bsv.Script.buildPublicKeyHashOut(changeAddress).toHex(),\n          satoshis: changeAmount\n        }\n      );\n\n      const sig = await web3.wallet.signTx(tx, inputIndex, SignType.ALL);\n      tx.inputs[inputIndex].script = sig;\n      return tx;\n    });\n  }\n\n\n\n  static async buildUnsignDeployTx(contract: AbstractContract, amountInContract: number): Promise<Tx> {\n    const changeAddress = await web3.wallet.changeAddress();\n    return web3.wallet.queryUtxos(amountInContract + FEE, {\n      purpose: 'change'\n    }).then(async (utxos: UTXO[]) => {\n      if (utxos.length === 0) {\n        throw new Error('no utxos');\n      }\n\n      const tx: Tx = {\n        inputs: [],\n        outputs: []\n      };\n      const input: Input = {\n        utxo: utxos[0],\n        sequence: 0,\n        script: ''\n      };\n\n      tx.inputs.push(input);\n\n      tx.outputs.push({\n        script: contract.lockingScript.toHex(),\n        satoshis: amountInContract\n      });\n\n      const changeAmount = utxos[0].satoshis - amountInContract - FEE;\n      tx.outputs.push({\n        script: bsv.Script.buildPublicKeyHashOut(changeAddress).toHex(),\n        satoshis: changeAmount\n      });\n\n      return tx;\n    });\n  }\n\n\n\n  static getPreimage(tx: Tx, inputIndex = 0, sigHashType: SignType = SignType.ALL): SigHashPreimage {\n    const bsvTx = wallet.toBsvTx(tx);\n    return getPreimage(bsvTx, bsv.Script.fromHex(tx.inputs[inputIndex].utxo.script).toASM(), tx.inputs[inputIndex].utxo.satoshis, inputIndex, sigHashType);\n  }\n\n\n  static async sendRawTx(rawTx: string): Promise<string> {\n    return web3.wallet.sendTx(rawTx);\n  }\n\n  static async sendTx(tx: Tx): Promise<string> {\n    return web3.wallet.sendTx(wallet.toHexBsvTx(tx));\n  }\n\n\n  static async deploy(contract: AbstractContract, amountInContract: number): Promise<string> {\n    return web3.buildDeployTx(contract, amountInContract).then(async tx => {\n      return web3.sendTx(tx);\n    });\n  }\n}\n\n\n\n\nconsole.log(`hello, this is scryptlib web3 ${WEB3_VERSION}.`);","\nimport { toHex, bsv } from 'scryptlib';\nimport { UTXO } from './wallet';\n\n\nexport function signInput(privateKey: any, tx: any, inputIndex: number, sigHashType: number, utxo: UTXO): string {\n\n  tx.inputs[inputIndex].output = new bsv.Transaction.Output({\n    script: utxo.script,\n    satoshis: utxo.satoshis\n  });\n\n  const sig = new bsv.Transaction.Signature({\n    publicKey: privateKey.publicKey,\n    prevTxId: utxo.txHash,\n    outputIndex: utxo.outputIndex,\n    inputIndex,\n    signature: bsv.Transaction.Sighash.sign(tx, privateKey, sigHashType,\n      inputIndex,\n      tx.inputs[inputIndex].output.script,\n      tx.inputs[inputIndex].output.satoshisBN),\n    sigtype: sigHashType,\n  });\n\n  return bsv.Script.buildPublicKeyHashIn(\n    sig.publicKey,\n    sig.signature.toDER(),\n    sig.sigtype,\n  ).toHex();\n}","import { Account, NetWork, UTXO, wallet, Tx, SignType } from './wallet';\nimport { toHex, bsv, signTx } from 'scryptlib';\nimport { signInput } from './wutils';\nimport axios from 'axios';\n\n\nexport class LocalWallet extends wallet {\n  API_PREFIX: string;\n  privKey: any;\n  constructor(network: NetWork, key?: string) {\n    super(network);\n    this.API_PREFIX = `https://api.whatsonchain.com/v1/bsv/${network == NetWork.Testnet ? 'test' : 'main'}`;\n    this.privKey = key ? new bsv.PrivateKey.fromWIF(key) : new bsv.PrivateKey.fromRandom(network);\n  }\n\n\n  requestAccount(name: string, permissions: string[]): Promise<Account> {\n    throw new Error('Method not implemented.');\n  }\n\n  async balance(): Promise<number> {\n\n    const {\n      data: balance\n    } = await axios.get(`${this.API_PREFIX}/address/${this.privKey.toAddress()}/balance`, {\n      timeout: 5000\n    });\n\n    return balance.confirmed + balance.unconfirmed;\n  }\n\n  async signTx(tx: Tx,\n    inputIndex: number,\n    sigHashType: SignType,\n    onlySig = false\n  ): Promise<string> {\n\n\n    const tx_ = wallet.toBsvTx(tx);\n\n    const utxo = tx.inputs[inputIndex].utxo;\n\n    if (onlySig) {\n      return signTx(tx_, this.privKey, tx_.inputs[inputIndex].output.script.toASM(), tx_.inputs[inputIndex].output.satoshisBN, inputIndex, sigHashType);\n    }\n    return signInput(this.privKey, tx_, inputIndex, sigHashType, utxo);\n  }\n\n  async sendTx(rawTx: string): Promise<string> {\n\n    // 1 second per KB\n\n    const size = Math.max(1, rawTx.length / 2 / 1024); //KB\n    const time = Math.max(10000, 1000 * size);\n    const {\n      data: txid\n    } = await axios.post(`${this.API_PREFIX}/tx/raw`, {\n      txhex: rawTx\n    }, {\n      timeout: time\n    });\n    return txid;\n  }\n\n  async queryUtxos(minAmount: number, options?: { purpose?: string; }): Promise<UTXO[]> {\n    return axios.get(`${this.API_PREFIX}/address/${this.privKey.toAddress()}/unspent`, {\n      timeout: 10000\n    }).then(res => {\n      return res.data.filter((utxo: any) => utxo.value >= minAmount).map((utxo: any) => {\n        return {\n          txHash: utxo.tx_hash,\n          outputIndex: utxo.tx_pos,\n          satoshis: utxo.value,\n          script: bsv.Script.buildPublicKeyHashOut(this.privKey.toAddress()).toHex(),\n        } as UTXO;\n      });\n    });\n  }\n\n\n  changeAddress(options?: { purpose?: string; }): Promise<string> {\n\n    return new Promise(resolve => resolve(this.privKey.toAddress() + ''));\n  }\n\n\n  publicKey(options?: { purpose?: string; }): Promise<string> {\n\n    return new Promise(resolve => resolve(toHex(this.privKey.publicKey)));\n  }\n\n}","\nimport { EventEmitter } from 'events';\n\nclass Server extends EventEmitter {\n    player = ''\n    privKey = ''\n    constructor() {\n        super();\n        var urlParams = new URLSearchParams(window.location.search);\n        this.player = urlParams.get('player') || \"alice\";\n        const self = this;\n        window.addEventListener('storage', (e) => {\n            // When local storage changes, dump the list to\n            // the console.\n            console.log('on storage change ' + this.player, e)\n\n\n            if (e.key === \"game\") {\n                try {\n                    let gameJson = window.localStorage.getItem('game');\n                    if (gameJson && gameJson !== null) {\n                        let game = JSON.parse(gameJson);\n\n                        if (game.event) {\n\n                            self.emit(game.event, game)\n                        }\n\n                    }\n                } catch (e) {\n                    console.error(' storage change error', e)\n                }\n            }\n\n        }, false);\n\n    }\n\n    existGamebySelf = () => {\n\n        let game = window.localStorage.getItem('game');\n\n        if (game && game !== null) {\n            game = JSON.parse(game);\n            if (game.creator && game.creator === this.player) {\n                return game;\n            }\n        }\n\n        return undefined;\n    }\n\n    existGamebyOther = () => {\n\n        let game = window.localStorage.getItem('game');\n\n        if (game && game !== null) {\n            game = JSON.parse(game);\n            if (game.creator && game.creator !== this.player) {\n                return game;\n            }\n        }\n\n        return undefined;\n    }\n\n\n    deleteGame = () => {\n        console.log('deleteGame');\n        window.localStorage.removeItem('game');\n    }\n\n\n    createGame = (game) => {\n        game.event = 'createGame';\n        console.log('createGame', game);\n        return window.localStorage.setItem('game', JSON.stringify(game));\n    }\n\n    saveGame = (game, event) => {\n        game.event = event;\n        console.log('saveGame', game);\n        window.localStorage.setItem('game', JSON.stringify(game));\n    }\n\n\n\n    getGame = () => {\n        let gameJson = window.localStorage.getItem('game');\n        if (gameJson && gameJson !== null) {\n            return JSON.parse(gameJson);\n        }\n        return undefined\n    }\n\n\n\n    getIdentity = () => (this.player);\n\n\n    savePrivateKey = (key) => {\n        this.privKey = key;\n        window.localStorage.setItem(this.player, key);\n    }\n\n\n    getPrivateKey = () => {\n        if (this.player) {\n            this.privKey = window.localStorage.getItem(this.player);\n        }\n\n        return this.privKey;\n    }\n\n\n    addJoinListener(cb) {\n        console.log('addJoinListener');\n        this.on('JoinGame', cb);\n    }\n\n\n    removeJoinListener(cb) {\n        console.log('removeJoinListener');\n        this.off('JoinGame', cb)\n    }\n\n\n    addAliceSignListener(cb) {\n        console.log('addAliceSignListener');\n        this.on('AliceSign', cb);\n    }\n\n    removeAliceSignListener(cb) {\n        console.log('removeAliceSignListener');\n        this.off('AliceSign', cb)\n    }\n\n\n    addDeployedListener(cb) {\n        console.log('addDeployedListener');\n        this.on('deployed', cb);\n    }\n\n\n    removeDeployedListener(cb) {\n        console.log('removeDeployedListener');\n        this.off('deployed', cb)\n    }\n\n\n    addNextListener(cb) {\n        console.log('addNextListener');\n        this.on('next', cb);\n    }\n\n    removeNextListener(cb) {\n        console.log('removeNextListener');\n        this.off('next', cb)\n    }\n}\n\nconst server = new Server();\n\nexport default server;","import React from 'react';\nimport Board from './Board';\nimport { bsv, Bytes, Sig, toHex } from 'scryptlib';\nimport { web3, Input, SignType } from './web3';\n\nimport server from './Server';\n\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[b] && squares[c] && squares[a].label === squares[b].label && squares[a].label === squares[c].label) {\n      return { winner: squares[a], winnerRow: lines[i] };\n    }\n  }\n\n  return { winner: null, winnerRow: null };\n};\n\nconst getLocation = (move) => {\n  const locationMap = {\n    0: 'row: 1, col: 1',\n    1: 'row: 1, col: 2',\n    2: 'row: 1, col: 3',\n    3: 'row: 2, col: 1',\n    4: 'row: 2, col: 2',\n    5: 'row: 2, col: 3',\n    6: 'row: 3, col: 1',\n    7: 'row: 3, col: 2',\n    8: 'row: 3, col: 3',\n  };\n\n  return locationMap[move];\n};\n\nconst initialState = {\n  history: [\n    {\n      squares: Array(9).fill(null),\n    },\n  ],\n  currentStepNumber: 0,\n  xIsNext: true,\n};\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (props.game && props.game.gameState) {\n      this.state = props.game.gameState;\n    } else {\n      this.state = initialState;\n    }\n  }\n\n\n\n  componentWillReceiveProps(nextProps) {\n    console.log('componentWillReceiveProps', nextProps)\n    if (nextProps.game && nextProps.game.gameState) {\n      this.setState(nextProps.game.gameState);\n    } else {\n      this.setState(initialState);\n    }\n  }\n\n\n  async componentDidMount() {\n    console.log('componentDidMount', this.props)\n\n\n  }\n\n  componentWillUnmount() {\n\n  }\n\n\n  async handleClick(i) {\n\n    if (!this.props.game || !this.props.game.lastUtxo) {\n      console.error(\"handleClick error\", this.props.game)\n      return;\n    }\n    const history = this.state.history.slice(0, this.state.currentStepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares).winner || squares[i]) {\n      return;\n    }\n    squares[i] = { label: this.state.xIsNext ? 'X' : 'O' };\n    let player = server.getIdentity();\n\n    if (player === \"alice\" && this.state.xIsNext) {\n\n    } else if (player === \"bob\" && !this.state.xIsNext) {\n\n    } else {\n      alert(`now is ${this.state.xIsNext ? 'Alice' : 'Bob'} turn `)\n      console.error(`now is ${this.state.xIsNext ? 'Alice' : 'Bob'} turn , but got ${player}`)\n      return;\n    }\n\n\n\n    let newState = (!this.state.xIsNext ? '00' : '01') + squares.map(square => {\n\n      if (square && square.label === 'X') {\n        return '01'\n      } else if (square && square.label === 'O') {\n        return '02'\n      } else {\n        return '00';\n      }\n    }).join('');\n\n    let newLockingScript = \"\";\n    let winner = calculateWinner(squares).winner;\n    const FEE = 2000;\n    let outputs = [];\n    let amount = this.props.game.lastUtxo.satoshis - FEE;\n    if (winner) {\n      // winner is current player\n\n      let address = await web3.wallet.changeAddress();\n\n      newLockingScript = bsv.Script.buildPublicKeyHashOut(address).toHex();\n\n      outputs.push({\n        satoshis: amount,\n        script: newLockingScript\n      })\n\n    } else if (history.length >= 9) {\n\n      const aliceAddress = new bsv.PublicKey(this.props.game.alicePubKey, {\n        network: bsv.Networks.testnet\n      });\n      const bobAddress = new bsv.PublicKey(this.props.game.bobPubKey, {\n        network: bsv.Networks.testnet\n      });\n\n      console.log('aliceAddress=' + aliceAddress.toAddress(bsv.Networks.testnet))\n      console.log('bobAddress=' + bobAddress.toAddress(bsv.Networks.testnet))\n      //no body win\n      const aliceLockingScript = bsv.Script.buildPublicKeyHashOut(aliceAddress.toAddress(bsv.Networks.testnet)).toHex();\n      const bobLockingScript = bsv.Script.buildPublicKeyHashOut(bobAddress.toAddress(bsv.Networks.testnet)).toHex();\n      amount = (this.props.game.lastUtxo.satoshis - FEE) / 2;\n\n      outputs.push({\n        satoshis: amount,\n        script: aliceLockingScript\n      })\n\n      outputs.push({\n        satoshis: amount,\n        script: bobLockingScript\n      })\n\n    } else {\n      //next\n      newLockingScript = [this.props.contractInstance.codePart.toHex(), bsv.Script.fromASM(newState).toHex()].join('');\n      outputs.push({\n        satoshis: amount,\n        script: newLockingScript\n      })\n    }\n\n\n\n\n    let tx = {\n      inputs: [{\n        utxo: this.props.game.lastUtxo,\n        sequence: 0,\n        script: \"\"\n      }],\n      outputs: outputs\n    }\n\n\n    let preimage = web3.getPreimage(tx);\n\n    web3.wallet.signTx(tx, 0, SignType.ALL, true).then(sig => {\n\n      let unlockScript = this.props.contractInstance.move(i, new Sig(toHex(sig)), amount, preimage).toHex();\n\n      tx.inputs[0].script = unlockScript;\n\n      web3.sendTx(tx).then(txid => {\n\n        squares[i].tx = txid;\n        let gameState = {\n          history: history.concat([\n            {\n              squares,\n              currentLocation: getLocation(i),\n              stepNumber: history.length,\n            },\n          ]),\n          xIsNext: !this.state.xIsNext,\n          currentStepNumber: history.length,\n        };\n\n        server.saveGame(Object.assign({}, this.props.game, {\n          gameState: gameState,\n          lastUtxo: {\n            txHash: txid,\n            outputIndex: 0,\n            satoshis: tx.outputs[0].satoshis,\n            script: tx.outputs[0].script\n          }\n        }), 'next')\n\n        this.setState(gameState);\n\n      }).catch(e => {\n        if (e.response) {\n          alert('sendTx errror: ' + e.response.data)\n        }\n        console.error('sendTx errror', e.response)\n      })\n    })\n\n  }\n\n\n  render() {\n    const { history } = this.state;\n    const current = history[this.state.currentStepNumber];\n    const { winner, winnerRow } = calculateWinner(current.squares);\n\n\n\n    const game = server.getGame();\n\n\n\n\n    let status;\n    let end;\n\n\n    let bet;\n    if (game && game.deploy) {\n      bet = <div className=\"bet\"><a href={`https://test.whatsonchain.com/tx/${game.deploy}`} target=\"_blank\">Bet transaction</a> </div>\n    }\n\n    let player = server.getIdentity();\n    if (winner) {\n      let winnerName = winner.label === 'X' ? 'Alice' : 'Bob';\n      status = `Winner is ${winnerName.toUpperCase() === player.toUpperCase() ? 'Your' : winnerName}`;\n      if (game && game.lastUtxo) {\n        end = <div className=\"end\"><a href={`https://test.whatsonchain.com/tx/${game.lastUtxo.txHash}`} target=\"_blank\">Withdraw transaction</a> </div>\n      }\n    } else if (history.length === 10) {\n      status = 'Draw. No one won.';\n      if (game && game.lastUtxo) {\n        end = <div className=\"end\"><a href={`https://test.whatsonchain.com/tx/${game.lastUtxo.txHash}`} target=\"_blank\">Withdraw transaction</a> </div>\n      }\n    } else {\n\n      let nexter = this.state.xIsNext ? 'Alice' : 'Bob';\n\n      status = `Next player: ${nexter.toUpperCase() === player.toUpperCase() ? 'Your' : nexter}`;\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n\n          <div className=\"game-status\"> {status} </div>\n\n          <Board\n            squares={current.squares}\n            winnerSquares={winnerRow}\n            onClick={i => this.handleClick(i)}\n          />\n\n          <div className=\"game-title\">\n            {bet}\n            {end}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","\nimport React, { useState, useRef, useEffect } from 'react';\n\nimport { web3 } from './web3';\nimport server from './Server';\n\nfunction makeid(length) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\n\nfunction TitleBar(prop) {\n    const forceUpdate = React.useReducer(bool => !bool)[1];\n\n    const amountRef = useRef(null);\n\n    const onStart = (e) => {\n\n        if (!web3.wallet) {\n            alert(\"Pelease create wallet first\")\n            return;\n        }\n        let amount = parseInt(amountRef.current.value);\n\n        if (amount < 10000) {\n            alert(\"The bet fund is too small to play, at least 10000\")\n            return;\n        }\n\n        if (!isNaN(amount)) {\n            prop.startBet(amount);\n        } else {\n            console.error(`${amountRef.current.value} is not number`)\n        }\n    }\n\n    const onCancel = (e) => {\n        prop.cancelBet();\n    }\n\n\n\n\n\n\n    useEffect(() => {\n\n    })\n\n    if (prop.started) {\n\n        return (\n            <div>\n                The game is in progress ...\n                <button className=\"pure-button cancel\" onClick={onCancel}>Restart</button>\n            </div>\n        );\n    }\n    else if (server.existGamebySelf()) {\n        return (\n            <div>\n                Waiting  Bob join the game ...\n                <a className=\"pure-button\" href={window.location.href + '?player=bob'} target=\"_blank\"> Join</a>\n                <button className=\"pure-button cancel\" onClick={onCancel}>Restart</button>\n            </div>\n        );\n\n    } else if (server.existGamebyOther()) {\n\n        return (\n            <div>\n                Joining the game...\n            </div>\n        );\n    }\n    else {\n        return (\n            <div>\n                <label>Bet amount:\n                    <input ref={amountRef} type=\"number\" name=\"amount\" placeholder=\"in satoshis\" />\n                </label>\n                <button className=\"start\" onClick={onStart}>Start Bet</button>\n            </div>\n        );\n    }\n}\n\nexport default TitleBar;\n","\nimport * as QRCode from 'qrcode.react';\nimport { bsv } from 'scryptlib';\nimport React, { useState, useEffect } from 'react';\nimport { web3, LocalWallet, NetWork } from './web3';\nimport { useInterval, forceUpdate } from './hooks';\nimport server from './Server';\n\nconst Wallet = props => {\n\n    const [address, setAddress] = useState('')\n    const [balance, setBalance] = useState(0)\n\n    useEffect(() => {\n\n        if (web3.wallet) {\n            web3.wallet.changeAddress().then(address => {\n                setAddress(address)\n            })\n\n            web3.wallet.balance().then(balance => {\n                setBalance(balance)\n            })\n        } else if (server.getPrivateKey()) {\n            web3.setWallet(new LocalWallet(NetWork.Testnet, server.getPrivateKey()));\n            props.updateWallet()\n        }\n    });\n\n\n    useInterval(() => {\n\n        if (web3.wallet) {\n            web3.wallet.balance().then(b => {\n                console.log(`update balance old: ${balance} new: ${b}`)\n\n                if (balance === 0 && b > 0) {\n                    alert('Successfully deposit, try F5 to reload the page')\n                }\n\n                setBalance(b)\n            })\n        }\n\n    }, 5000);\n\n\n    const onClick = (e) => {\n\n        try {\n            const privateKey = new bsv.PrivateKey.fromRandom('testnet')\n\n            web3.setWallet(new LocalWallet(NetWork.Testnet, privateKey.toWIF()));\n\n            server.savePrivateKey(privateKey.toWIF());\n            props.updateWallet();\n        } catch (e) {\n            console.log('wallet onChange error', e)\n        }\n    };\n\n\n\n\n\n    if (web3.wallet) {\n        return <div className=\"wallet\">\n\n            <div className=\"walletInfo\">\n                <div className=\"address\" >\n                    <label>Address: {address}</label>\n                </div>\n\n                <div className=\"balance\">\n                    <label >Balance: {balance}</label>\n                </div>\n\n                <div className=\"fundtips\">\n                    <label >You can fund the address with <a href=\"https://faucet.bitcoincloud.net\" target=\"_blank\"><span> faucets</span></a></label>\n                </div>\n            </div>\n            <div className=\"walletqrcode\">\n                <QRCode value={address} ></QRCode>\n            </div>\n\n        </div>\n    } else {\n        return <div className=\"wallet\">\n            <button className=\"pure-button button-large\" onClick={onClick}>Create Wallet</button>\n        </div>\n    }\n\n}\n\nexport default Wallet;\n\n\n","\nimport React, { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    });\n\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n    }, [delay]);\n}\n","import './App.css';\nimport Game from './Game';\nimport React, { useState, useEffect } from 'react';\nimport TitleBar from './TitleBar';\nimport { Bytes, PubKey, toHex, newCall } from 'scryptlib';\n\nimport { web3, SignType } from './web3';\nimport Wallet from './wallet';\n\nimport server from './Server';\n\n\n\nfunction App() {\n\n  const [started, updateStart] = useState(false);\n\n  const [contractInstance, updateContractInstance] = useState(null);\n\n  const forceUpdate = React.useReducer(bool => !bool)[1];\n\n  const startBet = async (amount) => {\n\n    //let tx = await web3.deploy(contractInstance, 10000);\n    console.log('startBet with amount', amount)\n\n    if (server.getIdentity() === 'bob') {\n      alert('Only Alice can start bet')\n      return\n    }\n\n    if (web3.wallet) {\n\n      //let tx = await web3.buildUnsignDeployTx(contractInstance, 10000);\n\n      let balance = await web3.wallet.balance();\n\n      if (amount > balance) {\n        alert('Please fund your wallet address first')\n        return\n      }\n\n      let alicePubKey = await web3.wallet.publicKey();\n\n\n      server.createGame({\n        \"amount\": amount,\n        \"tx\": {\n          inputs: [],\n          outputs: []\n        },\n        \"name\": \"tic-tac-toe\",\n        \"alicePubKey\": alicePubKey,\n        \"bobPubKey\": \"\",\n        \"creator\": \"alice\",\n        \"player\": \"\",\n        \"date\": new Date()\n      })\n\n      forceUpdate();\n    }\n  }\n\n  const cancelBet = () => {\n\n    server.deleteGame();\n    updateStart(false)\n    forceUpdate();\n  }\n\n  const onBobJoin = async (game) => {\n\n\n    console.log('onBobJoin', game)\n\n\n    if (game.creator === \"alice\" && server.getIdentity() === \"alice\") {\n\n      let tx = await web3.appendPayInput(game.tx, game.amount);\n      game.tx = tx;\n\n\n      server.saveGame(game, 'AliceSign');\n\n    } else {\n      updateStart(true);\n    }\n  }\n\n\n  const onAliceSign = async (game) => {\n    //Alice SIGN\n\n    if (game.creator === \"alice\" && server.getIdentity() === \"bob\") {\n\n      console.log('onAliceSign', game)\n      let sig = await web3.wallet.signTx(game.tx, 0, SignType.ALL);\n      game.tx.inputs[0].script = sig;\n      web3.sendTx(game.tx).then((txid => {\n        game.lastUtxo = {\n          txHash: txid,\n          outputIndex: 0,\n          satoshis: game.tx.outputs[0].satoshis,\n          script: game.tx.outputs[0].script\n        };\n\n        game.deploy = txid;\n\n        server.saveGame(game, \"deployed\")\n        updateStart(true)\n      }))\n    }\n\n  }\n\n\n  const onDeployed = async (game) => {\n    //BOB SIGN\n    if (game.creator === \"alice\" && server.getIdentity() === \"alice\") {\n      console.log('onDeployed', game)\n\n      fetchContract(game)\n      updateStart(true)\n    } else {\n      console.warn('onDeployed but not receive by Alice', game)\n    }\n  }\n\n\n  const onNext = async (game) => {\n    //BOB SIGN\n    console.log(\"onNext\", game)\n    forceUpdate();\n  }\n\n\n  async function fetchContract(game) {\n\n\n    if (contractInstance === null && game && game.bobPubKey && game.alicePubKey) {\n      let {\n        contractClass: TictactoeContractClass\n      } = await web3.loadContract(\"/tic-tac-toe/tictactoe_desc.json\");\n\n      let c = newCall(TictactoeContractClass, [new PubKey(toHex(game.alicePubKey)), new PubKey(toHex(game.bobPubKey))])\n      c.setDataPart(game.state ? game.state : '00000000000000000000');\n      console.log('fetchContract', c)\n      updateContractInstance(c);\n      return c;\n    }\n    console.log('fetchContract null')\n    return contractInstance\n  }\n\n\n  useEffect(() => {\n    let game = server.getGame();\n\n    if (game && game.lastUtxo) {\n      updateStart(true)\n    }\n\n\n\n    async function bobJoin(game) {\n\n      let bobPubKey = await web3.wallet.publicKey();\n\n      let balance = await web3.wallet.balance();\n\n\n      if (balance <= game.amount) {\n        alert('no available utxos or  balance is not enough, please fund your wallet')\n        return;\n      }\n\n      game = Object.assign(game, {\n        \"bobPubKey\": bobPubKey,\n        \"player\": \"Bob\"\n      })\n\n\n      let c = await fetchContract(game);\n\n      console.log('bobJoin fetchContract', c)\n      if (c != null) {\n        web3.buildUnsignDeployTx(c, game.amount).then(tx => {\n          tx.outputs[0].satoshis = game.amount * 2;\n          server.saveGame(Object.assign(game, {\n            \"tx\": tx\n          }), \"JoinGame\")\n        }).catch(e => {\n          if (e.message === 'no utxos') {\n            alert('no available utxos, please fund your wallet')\n          }\n          console.error('buildUnsignDeployTx error', e)\n        })\n      }\n    }\n\n\n    if (server.getIdentity() === 'bob' && game && !game.deploy) {\n\n      if (web3.wallet) {\n        bobJoin(game)\n      } else {\n        setTimeout(() => {\n          alert('Please create your wallet and fund it');\n        }, 1000)\n\n      }\n\n\n    } else {\n      fetchContract(game);\n    }\n\n\n\n    server.addJoinListener(onBobJoin);\n    server.addAliceSignListener(onAliceSign);\n    server.addDeployedListener(onDeployed);\n    server.addNextListener(onNext)\n    return () => {\n\n      server.removeAliceSignListener(onAliceSign)\n      server.removeDeployedListener(onDeployed)\n      server.removeJoinListener(onBobJoin)\n      server.removeNextListener(onNext)\n    }\n\n  }, [contractInstance]);\n\n\n  const game = server.getGame();\n\n  return (\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n        <h2>\n          sCrypt dapp tic-tac-toe\n        </h2>\n        <TitleBar startBet={startBet} cancelBet={cancelBet} started={started} game={game} />\n\n        <Game game={game} contractInstance={contractInstance} />\n\n        <Wallet updateWallet={() => {\n          forceUpdate()\n        }}></Wallet>\n      </header>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}